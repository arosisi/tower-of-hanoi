{"version":3,"sources":["components/actions/Info.js","components/actions/ReportBug.js","components/actions/Actions.js","constants.js","helpers.js","components/Disk.js","components/GameOver.js","components/Leaderboard.js","components/Timer.js","components/Controller.js","components/Initializer.js","App.js","serviceWorker.js","index.js"],"names":["Info","state","open","showInfo","this","props","classes","onClose","Dialog","DialogTitle","DialogContent","className","content","href","target","rel","React","Component","withStyles","marginTop","marginBottom","ReportBug","verified","submitting","status","handleSubmit","form","data","FormData","get","setState","xhr","XMLHttpRequest","method","action","setRequestHeader","onreadystatechange","readyState","DONE","send","windowWidth","root","onSubmit","initialValues","description","handleChange","values","ref","element","noValidate","autoComplete","privateInfo","form_endpoint","TextField","fullWidth","multiline","rowsMax","name","label","helperText","autoFocus","value","onChange","event","disabled","size","style","opacity","pointerEvents","sitekey","captcha_sitekey","onExpired","submit","submitted","CircularProgress","Button","color","type","error","textAlign","minWidth","margin","Actions","showReportBug","show","SpeedDial","ariaLabel","actions","icon","SpeedDialIcon","onOpen","direction","SpeedDialAction","tooltipTitle","tooltipPlacement","onClick","position","top","left","constants","formatTime","millisecs","duration","moment","Math","floor","asHours","utc","asMilliseconds","format","get1ToN","n","result","i","push","getLast","array","length","getUpToSecondLast","slice","getMeasurements","BASE_WIDTH","BASE_HEIGHT","multiplier","ceil","solve","numDisks","initCol1","initCol2","initCol3","col1","col2","col3","steps","moveDisk","fromCol","toCol","pop","moveDisks","maxSize","a","includes","JSON","stringify","Disk","active","xy","startMove","move","endMove","divWidth","isTiming","startTimer","width","height","useState","dragging","setDragging","zIndex","setZIndex","useSpring","x","y","onRest","setPosition","useEffect","myRef","useRef","bind","useGesture","onDragStart","preventDefault","onDrag","onDragEnd","colNum","domTarget","eventOptions","passive","div","borderRadius","background","cursor","display","justifyContent","alignSelf","GameOver","fetching","highScore","showError","renderTimeSubmitForm","time","fetch","api_endpoint","_id","headers","api_key","body","then","response","json","console","log","catch","Array","isArray","highScores","filter","flexDirection","Leaderboard","sort","Table","TableHead","TableRow","TableCell","align","TableBody","map","key","component","scope","Timer","handler","start","prevProps","running","setInterval","now","diff","clearInterval","recordTime","warning","DISK_COLORS","Controller","reverse","movingDisk","solving","step","showLeaderboard","hasUsedSolve","showGameOver","hasSubmitted","showSubmissionSuccess","isGameOver","getIsActive","getPosition","halfDivWidth","diskWidth","getY","col","windowHeight","newFromCol","newToCol","newCol1","newCol2","newCol3","parse","stop","restart","controlButtons","leaderboardButton","timer","Snackbar","success","message","right","maxNumDisks","Initializer","parseInt","setNumDisks","DIV_COLORS","App","window","innerWidth","innerHeight","initializing","addEventListener","divHeight","overground","game","userSelect","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.65391ad7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  content: {\r\n    marginTop: -20,\r\n    marginBottom: 20\r\n  }\r\n};\r\n\r\nclass Info extends React.Component {\r\n  state = { open: false, showInfo: false };\r\n\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    return (\r\n      <Dialog open={true} onClose={onClose}>\r\n        <DialogTitle>About the game</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <ul>\r\n            <li>\r\n              The objective is to move the stack of disks from the left column\r\n              to either of the other two columns.\r\n            </li>\r\n            <li>\r\n              Drag and drop a disk to move it. You can only move one disk at a\r\n              time and it must be the disk on top.\r\n            </li>\r\n            <li>Larger disks cannot be placed on top of smaller disks.</li>\r\n          </ul>\r\n          <p>\r\n            Read more about the game{\" \"}\r\n            <a\r\n              href='https://en.wikipedia.org/wiki/Tower_of_Hanoi'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              here\r\n            </a>\r\n            .\r\n          </p>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Info);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik } from \"formik\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport privateInfo from \"../../privateInfo\";\r\n\r\nconst styles = {\r\n  content: {\r\n    marginBottom: 20,\r\n    textAlign: \"center\"\r\n  },\r\n  description: {\r\n    minWidth: \"25ch\",\r\n    marginBottom: 10\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  },\r\n  submitted: {\r\n    marginBottom: 10\r\n  },\r\n  error: {\r\n    margin: 0,\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass ReportBug extends React.Component {\r\n  state = {\r\n    verified: false,\r\n    submitting: false,\r\n    status: \"\"\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const form = this.form;\r\n    const data = new FormData(form);\r\n    const description = data.get(\"description\");\r\n\r\n    if (description) {\r\n      this.setState({ submitting: true }, () => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(form.method, form.action);\r\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n          if (xhr.status === 200) {\r\n            this.setState({ submitting: false, status: \"SUCCESS\" });\r\n          } else {\r\n            this.setState({ submitting: false, status: \"ERROR\" });\r\n          }\r\n        };\r\n        xhr.send(data);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, windowWidth, onClose } = this.props;\r\n    const { verified, submitting, status } = this.state;\r\n    return (\r\n      <Dialog className={classes.root} open={true} onClose={onClose}>\r\n        <DialogTitle>Report a bug</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <Formik\r\n            onSubmit={this.handleSubmit}\r\n            initialValues={{ description: \"\" }}\r\n          >\r\n            {({ handleSubmit, handleChange, values }) => (\r\n              <form\r\n                ref={element => {\r\n                  this.form = element;\r\n                }}\r\n                noValidate\r\n                autoComplete='off'\r\n                onSubmit={handleSubmit}\r\n                action={privateInfo.form_endpoint}\r\n                method='POST'\r\n              >\r\n                <TextField\r\n                  className={classes.description}\r\n                  fullWidth\r\n                  multiline\r\n                  rowsMax={6}\r\n                  name='description'\r\n                  label='Description'\r\n                  helperText='Describe the bug to report'\r\n                  autoFocus={true}\r\n                  value={values.description}\r\n                  onChange={event => {\r\n                    this.setState({ status: \"\" });\r\n                    handleChange(event);\r\n                  }}\r\n                  disabled={status === \"SUCCESS\"}\r\n                />\r\n\r\n                <ReCAPTCHA\r\n                  size={windowWidth < 416 ? \"compact\" : \"normal\"}\r\n                  style={{\r\n                    ...(status === \"SUCCESS\"\r\n                      ? { opacity: 0.65, pointerEvents: \"none\" }\r\n                      : null)\r\n                  }}\r\n                  sitekey={privateInfo.captcha_sitekey}\r\n                  onChange={() => this.setState({ verified: true })}\r\n                  onExpired={() => this.setState({ verified: false })}\r\n                />\r\n\r\n                <div className={classes.submit}>\r\n                  {status === \"SUCCESS\" ? (\r\n                    <p className={classes.submitted}>Submitted!</p>\r\n                  ) : submitting ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    <Button\r\n                      color='primary'\r\n                      type='submit'\r\n                      disabled={!values.description || !verified}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  )}\r\n                  {status === \"ERROR\" && (\r\n                    <p className={classes.error}>Ooops! There was an error.</p>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ReportBug);\r\n","import React from \"react\";\r\nimport BugReportIcon from \"@material-ui/icons/BugReportOutlined\";\r\nimport FavoriteIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Info from \"./Info\";\r\nimport ReportBug from \"./ReportBug\";\r\n\r\nconst styles = {\r\n  actions: {\r\n    position: \"absolute\",\r\n    top: 15,\r\n    left: 15\r\n  }\r\n};\r\n\r\nclass Actions extends React.Component {\r\n  state = { open: false, showInfo: false, showReportBug: false };\r\n\r\n  render() {\r\n    const { classes, windowWidth, show } = this.props;\r\n    const { open, showInfo, showReportBug } = this.state;\r\n    return (\r\n      <div>\r\n        <SpeedDial\r\n          ariaLabel='Actions'\r\n          className={classes.actions}\r\n          icon={<SpeedDialIcon />}\r\n          onClose={() => this.setState({ open: false })}\r\n          onOpen={() => this.setState({ open: true })}\r\n          open={open}\r\n          direction='down'\r\n        >\r\n          <SpeedDialAction\r\n            icon={<FavoriteIcon />}\r\n            tooltipTitle={\"Like\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => this.setState({ open: false })}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<ShareIcon />}\r\n            tooltipTitle={\"Share\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => this.setState({ open: false })}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<InfoIcon />}\r\n            tooltipTitle={\"Info\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => {\r\n              show();\r\n              this.setState({ open: false, showInfo: true });\r\n            }}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<BugReportIcon />}\r\n            tooltipTitle={\"Report Bug\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => {\r\n              show();\r\n              this.setState({ open: false, showReportBug: true });\r\n            }}\r\n          />\r\n        </SpeedDial>\r\n\r\n        {showInfo && (\r\n          <Info onClose={() => this.setState({ showInfo: false })} />\r\n        )}\r\n        {showReportBug && (\r\n          <ReportBug\r\n            windowWidth={windowWidth}\r\n            onClose={() => this.setState({ showReportBug: false })}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Actions);\r\n","export const constants = {\r\n  BASE_WIDTH: 60,\r\n  BASE_HEIGHT: 20,\r\n  DIV_COLORS: [\r\n    \"rgb(215, 169, 227, 0.4)\",\r\n    \"rgb(139, 190, 232, 0.4)\",\r\n    \"rgb(168, 213, 186, 0.4)\"\r\n  ],\r\n  DISK_COLORS: [\r\n    // 12 colors, referenced from\r\n    // https://venngage.com/blog/how-to-pick-colors/\r\n    \"#fef200\",\r\n    \"#9bca3b\",\r\n    \"#27b252\",\r\n    \"#0db0a1\",\r\n    \"#3654a7\",\r\n    \"#493a98\",\r\n    \"#92278f\",\r\n    \"#92296d\",\r\n    \"#ed1923\",\r\n    \"#ef4224\",\r\n    \"#f36522\",\r\n    \"#f89f1a\"\r\n  ]\r\n};\r\n","import moment from \"moment\";\r\n\r\nimport { constants } from \"./constants\";\r\n\r\nexport const formatTime = millisecs => {\r\n  const duration = moment.duration(millisecs);\r\n  return (\r\n    Math.floor(duration.asHours()) +\r\n    moment.utc(duration.asMilliseconds()).format(\":mm:ss:SSS\")\r\n  );\r\n};\r\n\r\nexport const get1ToN = n => {\r\n  const result = [];\r\n  for (let i = 1; i <= n; i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getLast = array => array[array.length - 1];\r\n\r\nexport const getUpToSecondLast = array => array.slice(0, array.length - 1);\r\n\r\nexport const getMeasurements = size => {\r\n  const { BASE_WIDTH, BASE_HEIGHT } = constants;\r\n  const multiplier = size * 0.4 + 0.6;\r\n  return [Math.ceil(BASE_WIDTH * multiplier), BASE_HEIGHT];\r\n};\r\n\r\nexport const solve = (numDisks, initCol1, initCol2, initCol3) => {\r\n  let col1 = [...initCol1];\r\n  let col2 = [...initCol2];\r\n  let col3 = [...initCol3];\r\n\r\n  let steps = \"\";\r\n\r\n  const moveDisk = (fromCol, toCol, size) => {\r\n    if (fromCol === col1) {\r\n      col1.pop();\r\n    } else if (fromCol === col2) {\r\n      col2.pop();\r\n    } else {\r\n      col3.pop();\r\n    }\r\n\r\n    if (toCol === col1) {\r\n      col1.push(size);\r\n    } else if (toCol === col2) {\r\n      col2.push(size);\r\n    } else {\r\n      col3.push(size);\r\n    }\r\n  };\r\n\r\n  // algorithm from\r\n  // https://stackoverflow.com/questions/49220476/tower-of-hanoi-solving-halfway-algorithm-in-python\r\n  const moveDisks = async (maxSize, toCol) => {\r\n    let fromCol;\r\n    let size = maxSize;\r\n    while (size >= 1) {\r\n      if (col1 !== toCol && col1.includes(size)) {\r\n        fromCol = col1;\r\n        break;\r\n      }\r\n      if (col2 !== toCol && col2.includes(size)) {\r\n        fromCol = col2;\r\n        break;\r\n      }\r\n      if (col3 !== toCol && col3.includes(size)) {\r\n        fromCol = col3;\r\n        break;\r\n      }\r\n      size--;\r\n    }\r\n\r\n    // all disks are already in the to-column\r\n    if (size === 0) {\r\n      return;\r\n    }\r\n\r\n    const otherCol =\r\n      col1 !== fromCol && col1 !== toCol\r\n        ? col1\r\n        : col2 !== fromCol && col2 !== toCol\r\n        ? col2\r\n        : col3;\r\n\r\n    moveDisks(size - 1, otherCol);\r\n\r\n    moveDisk(fromCol, toCol, size);\r\n    steps += `${JSON.stringify({ col1, col2, col3 })},`;\r\n\r\n    moveDisks(size - 1, toCol);\r\n  };\r\n\r\n  moveDisks(numDisks, col2);\r\n\r\n  return `[${steps.slice(0, -1)}]`;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nimport { getMeasurements } from \"../helpers\";\r\n\r\nfunction Disk(props) {\r\n  const {\r\n    active,\r\n    xy,\r\n    startMove,\r\n    move,\r\n    endMove,\r\n    size,\r\n    color,\r\n    divWidth,\r\n    isTiming,\r\n    startTimer\r\n  } = props;\r\n  const [width, height] = getMeasurements(size);\r\n\r\n  // is the disk being dragged\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  // z-index to put moving disk in front\r\n  const [zIndex, setZIndex] = useState(1);\r\n\r\n  // spring to smoothen drag\r\n  const [{ x, y }, setPosition] = useSpring(\r\n    () => ({\r\n      x: xy[0],\r\n      y: xy[1],\r\n      onRest() {\r\n        if (!dragging) endMove();\r\n      }\r\n    }),\r\n    [dragging, endMove]\r\n  );\r\n\r\n  // move disks via props.xy\r\n  useEffect(() => {\r\n    setPosition({ x: props.xy[0], y: props.xy[1] });\r\n  }, [setPosition, props.xy]);\r\n\r\n  const myRef = React.useRef(null);\r\n\r\n  const bind = useGesture(\r\n    {\r\n      onDragStart: ({ event }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          startMove();\r\n          setDragging(true);\r\n          if (!isTiming) {\r\n            startTimer();\r\n          }\r\n        }\r\n      },\r\n      onDrag: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          setPosition({ x: x - width / 2, y: y - height / 2 });\r\n          if (zIndex !== 99) {\r\n            setZIndex(99);\r\n          }\r\n        }\r\n      },\r\n      onDragEnd: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          const colNum = x <= divWidth ? 1 : x <= 2 * divWidth ? 2 : 3;\r\n          setDragging(false);\r\n          setZIndex(1);\r\n          move(colNum, size);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      domTarget: myRef,\r\n      eventOptions: { passive: false }\r\n    }\r\n  );\r\n\r\n  React.useEffect(bind, [bind]);\r\n\r\n  return (\r\n    <animated.div\r\n      ref={myRef}\r\n      {...bind()}\r\n      style={{\r\n        position: \"absolute\",\r\n        x,\r\n        y,\r\n        zIndex,\r\n        width,\r\n        height,\r\n        borderRadius: \"20px\",\r\n        background: color,\r\n        cursor: active ? \"grab\" : \"default\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n      }}\r\n    >\r\n      <span style={{ alignSelf: \"center\" }}>{size}</span>\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nexport default Disk;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik } from \"formik\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  },\r\n  error: {\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass GameOver extends React.Component {\r\n  state = {\r\n    fetching: true,\r\n    highScore: null,\r\n    submitting: false,\r\n    showError: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { numDisks } = this.props;\r\n    fetch(privateInfo.api_endpoint, {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-apikey\": privateInfo.api_key,\r\n        \"cache-control\": \"no-cache\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (Array.isArray(response)) {\r\n          const highScores = response.filter(\r\n            highScore => highScore.numDisks === numDisks\r\n          );\r\n          this.setState({\r\n            fetching: false,\r\n            highScore: highScores.length ? highScores[0] : null\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false });\r\n          console.log(\"Failed to fetch.\");\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  renderTimeSubmitForm = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Formik onSubmit={this.handleSubmit} initialValues={{ name: \"\" }}>\r\n        {({ handleSubmit, handleChange, values }) => (\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              name='name'\r\n              label='Name'\r\n              helperText='Enter your name to display on the leaderboard'\r\n              autoFocus={true}\r\n              value={values.name}\r\n              onChange={event => {\r\n                this.setState({ showError: false });\r\n                handleChange(event);\r\n              }}\r\n            />\r\n            <Button\r\n              className={classes.submit}\r\n              color='primary'\r\n              type='submit'\r\n              disabled={!values.name}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  };\r\n\r\n  handleSubmit = ({ name }) => {\r\n    const { numDisks, time, onSubmit } = this.props;\r\n    const { highScore } = this.state;\r\n    this.setState({ submitting: true }, () => {\r\n      fetch(\r\n        `${privateInfo.api_endpoint}${highScore ? `/${highScore._id}` : \"\"}`,\r\n        {\r\n          method: highScore ? \"PUT\" : \"POST\",\r\n          headers: {\r\n            \"content-type\": \"application/json\",\r\n            \"x-apikey\": privateInfo.api_key,\r\n            \"cache-control\": \"no-cache\"\r\n          },\r\n          body: JSON.stringify({\r\n            numDisks: numDisks,\r\n            name,\r\n            time\r\n          })\r\n        }\r\n      )\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          console.log(response);\r\n          if (response._id) {\r\n            this.setState({\r\n              submitting: false\r\n            });\r\n            onSubmit();\r\n          } else {\r\n            this.setState({ submitting: false, showError: true });\r\n            console.log(\"Failed to update.\");\r\n          }\r\n        })\r\n        .catch(error => console.log(\"Unable to connect to API.\", error));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, numDisks, time, onClose } = this.props;\r\n    const { fetching, highScore, submitting, showError } = this.state;\r\n    return (\r\n      <div>\r\n        <Dialog className={classes.root} open={true} onClose={onClose}>\r\n          <DialogTitle>Your time is {formatTime(time)}!</DialogTitle>\r\n          <DialogContent className={classes.content}>\r\n            {fetching ? (\r\n              <CircularProgress />\r\n            ) : highScore ? (\r\n              time < highScore.time ? (\r\n                <div>\r\n                  <div>\r\n                    You beat the current high score of{\" \"}\r\n                    <strong>{highScore.name}</strong> of{\" \"}\r\n                    <strong>{formatTime(highScore.time)}</strong> for {numDisks}{\" \"}\r\n                    disk(s).\r\n                  </div>\r\n                  <br />\r\n                  {submitting ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    this.renderTimeSubmitForm()\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div>\r\n                    You haven't beaten the current high score of{\" \"}\r\n                    <strong>{highScore.name}</strong> of{\" \"}\r\n                    <strong>{formatTime(highScore.time)}</strong> for {numDisks}{\" \"}\r\n                    disk(s).\r\n                  </div>\r\n                  <p>Try again!</p>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <div>\r\n                <div>\r\n                  There is no high score for now for {numDisks} disk(s).\r\n                </div>\r\n                <br />\r\n                {submitting ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  this.renderTimeSubmitForm()\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {showError && (\r\n              <p className={classes.error}>\r\n                Something went wrong. Try again later.\r\n              </p>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(GameOver);\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  },\r\n  error: {\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass Leaderboard extends React.Component {\r\n  state = { fetching: true, highScores: [], showError: false };\r\n\r\n  componentDidMount() {\r\n    fetch(privateInfo.api_endpoint, {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-apikey\": privateInfo.api_key,\r\n        \"cache-control\": \"no-cache\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (Array.isArray(response)) {\r\n          this.setState({\r\n            fetching: false,\r\n            highScores: response.sort(\r\n              ({ numDisks: numDisks1 }, { numDisks: numDisks2 }) =>\r\n                numDisks1 - numDisks2\r\n            )\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false, showError: true });\r\n          console.log(\"Failed to fetch.\");\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    const { fetching, highScores, showError } = this.state;\r\n    return (\r\n      <Dialog className={classes.root} open={true} onClose={onClose}>\r\n        <DialogTitle>Leaderboard</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          {fetching ? (\r\n            <CircularProgress />\r\n          ) : highScores.length ? (\r\n            <Table size='small'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>No. Disks</TableCell>\r\n                  <TableCell align='right'>Name</TableCell>\r\n                  <TableCell align='right'>Time</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {highScores.map(highScore => {\r\n                  const { time } = highScore;\r\n                  return (\r\n                    <TableRow key={highScore.numDisks}>\r\n                      <TableCell component='th' scope='row'>\r\n                        {highScore.numDisks}\r\n                      </TableCell>\r\n                      <TableCell align='right'>{highScore.name}</TableCell>\r\n                      <TableCell align='right'>{formatTime(time)}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            !showError && \"There are no high scores for now.\"\r\n          )}\r\n\r\n          {showError && (\r\n            <div className={classes.error}>\r\n              Something went wrong. Try again later.\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Leaderboard);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\n\r\nconst styles = {\r\n  time: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\",\r\n    cursor: \"pointer\"\r\n  },\r\n  warning: {\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass Timer extends React.Component {\r\n  state = { handler: null, start: null, millisecs: 0 };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.running && this.props.running) {\r\n      const handler = setInterval(() => {\r\n        const now = moment();\r\n        const start = this.state.start || now;\r\n        const millisecs = now.diff(start);\r\n        this.setState({ start, millisecs });\r\n      }, 10);\r\n      this.setState({ handler });\r\n    }\r\n\r\n    if (prevProps.running && !this.props.running) {\r\n      const { handler } = this.state;\r\n      clearInterval(handler);\r\n\r\n      if (!prevProps.disabled && !this.props.disabled) {\r\n        this.props.recordTime(this.state.millisecs);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    clearInterval(handler);\r\n  }\r\n\r\n  render() {\r\n    const { classes, disabled, recordTime } = this.props;\r\n    const { millisecs } = this.state;\r\n    return (\r\n      <div style={{ color: disabled ? \"#f44336\" : \"inherit\" }}>\r\n        <div className={classes.time} onClick={() => recordTime(millisecs)}>\r\n          {formatTime(millisecs)}\r\n        </div>\r\n        {disabled && (\r\n          <div className={classes.warning}>Time is now invalid!</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Timer);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Confetti from \"react-confetti\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Actions from \"./actions/Actions\";\r\nimport Disk from \"./Disk\";\r\nimport GameOver from \"./GameOver\";\r\nimport Leaderboard from \"./Leaderboard\";\r\nimport Timer from \"./Timer\";\r\nimport {\r\n  get1ToN,\r\n  getLast,\r\n  getUpToSecondLast,\r\n  getMeasurements,\r\n  solve\r\n} from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\n\r\nconst { DISK_COLORS } = constants;\r\n\r\nconst styles = {\r\n  controlButtons: {\r\n    position: \"absolute\",\r\n    top: 30,\r\n    left: 0,\r\n    right: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  leaderboardButton: {\r\n    position: \"absolute\",\r\n    top: 70,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  timer: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  success: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\"\r\n  }\r\n};\r\n\r\nclass Controller extends React.Component {\r\n  state = {\r\n    col1: get1ToN(this.props.numDisks).reverse(),\r\n    col2: [],\r\n    col3: [],\r\n    movingDisk: null,\r\n    solving: false,\r\n    handler: null,\r\n    step: 0,\r\n    showLeaderboard: false,\r\n    isTiming: false,\r\n    time: null,\r\n    hasUsedSolve: false,\r\n    showGameOver: false,\r\n    hasSubmitted: false,\r\n    showSubmissionSuccess: false\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    if (handler) {\r\n      clearInterval(handler);\r\n    }\r\n  }\r\n\r\n  isGameOver = () => {\r\n    const { numDisks } = this.props;\r\n    const { col2, col3, movingDisk } = this.state;\r\n    return (\r\n      !movingDisk && (col2.length === numDisks || col3.length === numDisks)\r\n    );\r\n  };\r\n\r\n  getIsActive = size => {\r\n    const { col1, col2, col3, movingDisk, solving } = this.state;\r\n    return (\r\n      (!movingDisk || movingDisk === size) &&\r\n      !solving &&\r\n      !this.isGameOver() &&\r\n      (getLast(col1) === size ||\r\n        getLast(col2) === size ||\r\n        getLast(col3) === size)\r\n    );\r\n  };\r\n\r\n  getPosition = size => {\r\n    const { windowWidth } = this.props;\r\n    const { col1, col2, col3 } = this.state;\r\n    const halfDivWidth = windowWidth / 6;\r\n    const diskWidth = getMeasurements(size)[0];\r\n    if (col1.includes(size)) {\r\n      const x = halfDivWidth - diskWidth / 2;\r\n      const y = this.getY(col1, size);\r\n      return [x, y];\r\n    }\r\n\r\n    if (col2.includes(size)) {\r\n      const x = halfDivWidth * 3 - diskWidth / 2;\r\n      const y = this.getY(col2, size);\r\n      return [x, y];\r\n    }\r\n\r\n    const x = halfDivWidth * 5 - diskWidth / 2;\r\n    const y = this.getY(col3, size);\r\n    return [x, y];\r\n  };\r\n\r\n  getY = (col, size) => {\r\n    const { windowHeight } = this.props;\r\n    const divHeight = windowHeight - 150;\r\n    const diskHeight = getMeasurements(size)[1];\r\n    let y = divHeight - diskHeight;\r\n    let i = 0;\r\n    while (col[i] !== size) {\r\n      y -= getMeasurements(col[i])[1];\r\n      i++;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  move = (colNum, size) => {\r\n    const { col1, col2, col3 } = this.state;\r\n    // prettier-ignore\r\n    const fromCol = col1.includes(size) ? col1 : col2.includes(size) ? col2 : col3;\r\n    const toCol = colNum === 1 ? col1 : colNum === 2 ? col2 : col3;\r\n\r\n    if (fromCol === toCol || size > getLast(toCol)) {\r\n      return;\r\n    }\r\n\r\n    const newFromCol = getUpToSecondLast(fromCol);\r\n    const newToCol = [...toCol, size];\r\n\r\n    // prettier-ignore\r\n    const newCol1 = col1 === fromCol ? newFromCol : col1 === toCol ? newToCol : col1\r\n    // prettier-ignore\r\n    const newCol2 = col2 === fromCol ? newFromCol : col2 === toCol ? newToCol : col2\r\n    // prettier-ignore\r\n    const newCol3 = col3 === fromCol ? newFromCol : col3 === toCol ? newToCol : col3\r\n\r\n    this.setState({\r\n      col1: newCol1,\r\n      col2: newCol2,\r\n      col3: newCol3\r\n    });\r\n  };\r\n\r\n  solve = () => {\r\n    this.setState({ isTiming: false, hasUsedSolve: true });\r\n\r\n    const { numDisks } = this.props;\r\n    const { col1, col2, col3 } = this.state;\r\n    const steps = JSON.parse(solve(numDisks, [...col1], [...col2], [...col3]));\r\n    this.setState({ solving: true, steps, step: 0 }, () => {\r\n      const handler = setInterval(() => {\r\n        const { steps, step } = this.state;\r\n        if (step < steps.length) {\r\n          this.setState({ ...steps[step], step: step + 1 });\r\n        } else {\r\n          clearInterval(handler);\r\n        }\r\n      }, 1000);\r\n      this.setState({ handler });\r\n    });\r\n  };\r\n\r\n  stop = () => {\r\n    const { handler } = this.state;\r\n    this.setState({ solving: false }, () => clearInterval(handler));\r\n  };\r\n\r\n  show = state => {\r\n    const { solving, handler } = this.state;\r\n    if (solving && !this.isGameOver()) {\r\n      this.setState({ solving: false, ...state }, () => clearInterval(handler));\r\n    } else {\r\n      this.setState({ ...state });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      numDisks,\r\n      windowWidth,\r\n      windowHeight,\r\n      restart\r\n    } = this.props;\r\n    const {\r\n      solving,\r\n      showLeaderboard,\r\n      isTiming,\r\n      time,\r\n      hasUsedSolve,\r\n      showGameOver,\r\n      hasSubmitted,\r\n      showSubmissionSuccess\r\n    } = this.state;\r\n    const divWidth = windowWidth / 3;\r\n    const isGameOver = this.isGameOver();\r\n    return (\r\n      <div>\r\n        <Actions windowWidth={windowWidth} show={this.show} />\r\n\r\n        <div className={classes.controlButtons}>\r\n          {!solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.solve}>\r\n              Solve\r\n            </Button>\r\n          )}\r\n          {solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.stop}>\r\n              Stop\r\n            </Button>\r\n          )}\r\n          <Button color='secondary' onClick={restart}>\r\n            Restart\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.leaderboardButton}>\r\n          <Button onClick={() => this.show({ showLeaderboard: true })}>\r\n            Leaderboard\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.timer}>\r\n          <Timer\r\n            running={isTiming && !isGameOver}\r\n            disabled={hasUsedSolve}\r\n            recordTime={time => this.setState({ time, showGameOver: true })}\r\n          />\r\n        </div>\r\n\r\n        {showLeaderboard && (\r\n          <Leaderboard\r\n            onClose={() => this.setState({ showLeaderboard: false })}\r\n          />\r\n        )}\r\n\r\n        {showGameOver && isGameOver && !hasUsedSolve && !hasSubmitted && (\r\n          <GameOver\r\n            numDisks={numDisks}\r\n            time={time}\r\n            onClose={() => this.setState({ showGameOver: false })}\r\n            onSubmit={() =>\r\n              this.setState({ hasSubmitted: true, showSubmissionSuccess: true })\r\n            }\r\n          />\r\n        )}\r\n\r\n        {showSubmissionSuccess && (\r\n          <Snackbar\r\n            className={classes.success}\r\n            open={true}\r\n            message='High score submitted!'\r\n            onClose={() => this.setState({ showSubmissionSuccess: false })}\r\n          />\r\n        )}\r\n\r\n        {isGameOver && <Confetti width={windowWidth} height={windowHeight} />}\r\n\r\n        {get1ToN(numDisks).map(size => (\r\n          <Disk\r\n            key={size}\r\n            active={this.getIsActive(size)}\r\n            xy={this.getPosition(size)}\r\n            startMove={() => this.setState({ movingDisk: size })}\r\n            move={this.move}\r\n            endMove={() => this.setState({ movingDisk: null })}\r\n            size={size}\r\n            color={DISK_COLORS[size - 1]}\r\n            divWidth={divWidth}\r\n            isTiming={isTiming}\r\n            startTimer={() => {\r\n              const { hasUsedSolve } = this.state;\r\n              if (!hasUsedSolve) {\r\n                this.setState({ isTiming: true });\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Controller);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { get1ToN } from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\n\r\nconst { DISK_COLORS } = constants;\r\nconst maxNumDisks = DISK_COLORS.length;\r\n\r\nconst styles = {\r\n  root: {\r\n    marginTop: 30\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass Initializer extends React.Component {\r\n  state = { error: false };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const numDisks = parseInt(data.get(\"numDisks\"));\r\n    if (get1ToN(maxNumDisks).includes(numDisks)) {\r\n      this.props.setNumDisks(numDisks);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { error } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <form onSubmit={this.handleSubmit} noValidate autoComplete='off'>\r\n          <TextField\r\n            name='numDisks'\r\n            label='Number of Disks'\r\n            helperText={`Enter a number up to ${maxNumDisks}`}\r\n            autoFocus={true}\r\n            error={error}\r\n          />\r\n          <br />\r\n          <Button className={classes.submit} color='primary' type='submit'>\r\n            Go\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Initializer);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Controller from \"./components/Controller\";\r\nimport Initializer from \"./components/Initializer\";\r\nimport { constants } from \"./constants\";\r\n\r\nconst { DIV_COLORS } = constants;\r\n\r\nconst styles = {\r\n  overground: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    userSelect: \"none\"\r\n  },\r\n  game: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    windowWidth: window.innerWidth,\r\n    windowHeight: window.innerHeight,\r\n    initializing: true,\r\n    numDisks: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", ({ target }) =>\r\n      this.setState({\r\n        windowWidth: target.innerWidth,\r\n        windowHeight: target.innerHeight\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { windowWidth, windowHeight, initializing, numDisks } = this.state;\r\n    const divWidth = windowWidth / 3;\r\n    const divHeight = windowHeight - 150;\r\n    return (\r\n      <div>\r\n        <div className={classes.overground}>\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[0]\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[1]\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[2]\r\n            }}\r\n          />\r\n\r\n          <div className={classes.game}>\r\n            {initializing ? (\r\n              <Initializer\r\n                setNumDisks={numDisks =>\r\n                  this.setState({ initializing: false, numDisks })\r\n                }\r\n              />\r\n            ) : (\r\n              <Controller\r\n                numDisks={numDisks}\r\n                windowWidth={windowWidth}\r\n                windowHeight={windowHeight}\r\n                restart={() => this.setState({ initializing: true })}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: windowWidth,\r\n            height: 150,\r\n            background: \"gainsboro\"\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}