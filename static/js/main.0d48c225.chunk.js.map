{"version":3,"sources":["components/actions/Info.js","components/actions/ReportBug.js","components/actions/Actions.js","constants.js","helpers.js","components/Disk.js","components/GameOver.js","components/Leaderboard.js","components/Timer.js","components/Controller.js","components/Initializer.js","App.js","serviceWorker.js","index.js"],"names":["Info","state","open","showInfo","this","props","classes","onClose","Dialog","DialogTitle","DialogContent","className","content","href","target","rel","React","Component","withStyles","marginTop","marginBottom","ReportBug","submitting","status","handleSubmit","form","data","FormData","get","setState","xhr","XMLHttpRequest","method","action","setRequestHeader","onreadystatechange","readyState","DONE","send","onSubmit","initialValues","description","handleChange","values","ref","element","noValidate","autoComplete","TextField","multiline","rowsMax","name","label","helperText","autoFocus","value","onChange","event","disabled","submit","submitted","CircularProgress","Button","color","type","error","textAlign","width","margin","Actions","showReportBug","show","SpeedDial","ariaLabel","actions","icon","SpeedDialIcon","onOpen","direction","SpeedDialAction","tooltipTitle","tooltipPlacement","onClick","position","top","left","constants","formatTime","seconds","duration","moment","Math","floor","asHours","utc","asMilliseconds","format","get1ToN","n","result","i","push","getLast","array","length","getUpToSecondLast","slice","getMeasurements","size","BASE_WIDTH","BASE_HEIGHT","multiplier","ceil","solve","numDisks","initCol1","initCol2","initCol3","col1","col2","col3","steps","moveDisk","fromCol","toCol","pop","moveDisks","maxSize","a","includes","JSON","stringify","Disk","active","xy","move","divWidth","height","useSpring","x","y","setPosition","useEffect","useState","zIndex","setZIndex","myRef","useRef","bind","useGesture","onDrag","preventDefault","onDragEnd","moveTo","domTarget","eventOptions","passive","div","style","borderRadius","background","cursor","display","justifyContent","alignSelf","GameOver","fetching","highScore","showError","renderTimeSubmitForm","time","fetch","privateInfo","api_endpoint","headers","body","NumDisks","then","response","json","success","console","log","message","catch","highScores","filter","root","flexDirection","Leaderboard","sort","Table","TableHead","TableRow","TableCell","align","TableBody","map","key","component","scope","Timer","handler","prevProps","running","setInterval","clearInterval","recordTime","warning","DISK_COLORS","Controller","reverse","solving","step","showLeaderboard","isTiming","hasUsedSolve","showGameOver","hasSubmitted","showSubmissionSuccess","isGameOver","getIsActive","getPosition","halfDivWidth","windowWidth","diskWidth","getY","col","windowHeight","colNum","newFromCol","newToCol","newCol1","newCol2","newCol3","parse","stop","restart","controlButtons","leaderboardButton","timer","Snackbar","right","maxNumDisks","Initializer","parseInt","setNumDisks","DIV_COLORS","App","window","innerWidth","innerHeight","initializing","addEventListener","divHeight","overground","game","userSelect","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d48c225.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  content: {\r\n    marginTop: -20,\r\n    marginBottom: 20\r\n  }\r\n};\r\n\r\nclass Info extends React.Component {\r\n  state = { open: false, showInfo: false };\r\n\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    return (\r\n      <Dialog open={true} onClose={onClose}>\r\n        <DialogTitle>About the game</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <ul>\r\n            <li>\r\n              The objective is to move the stack of disks from the left column\r\n              to either of the other two columns.\r\n            </li>\r\n            <li>\r\n              Drag and drop a disk to move it. You can only move one disk at a\r\n              time and it must be the disk on top.\r\n            </li>\r\n            <li>Larger disks cannot be placed on top of smaller disks.</li>\r\n          </ul>\r\n          <p>\r\n            Read more about the game{\" \"}\r\n            <a\r\n              href='https://en.wikipedia.org/wiki/Tower_of_Hanoi'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              here\r\n            </a>\r\n            .\r\n          </p>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Info);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik } from \"formik\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  content: {\r\n    marginBottom: 20,\r\n    textAlign: \"center\"\r\n  },\r\n  description: {\r\n    width: \"30ch\"\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  },\r\n  submitted: {\r\n    marginBottom: 10\r\n  },\r\n  error: {\r\n    margin: 0,\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass ReportBug extends React.Component {\r\n  state = {\r\n    submitting: false,\r\n    status: \"\"\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const form = this.form;\r\n    const data = new FormData(form);\r\n    const description = data.get(\"description\");\r\n\r\n    if (description) {\r\n      this.setState({ submitting: true }, () => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(form.method, form.action);\r\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n          if (xhr.status === 200) {\r\n            this.setState({ submitting: false, status: \"SUCCESS\" });\r\n          } else {\r\n            this.setState({ submitting: false, status: \"ERROR\" });\r\n          }\r\n        };\r\n        xhr.send(data);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    const { submitting, status } = this.state;\r\n    return (\r\n      <Dialog open={true} onClose={onClose}>\r\n        <DialogTitle>Report a bug</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <Formik\r\n            onSubmit={this.handleSubmit}\r\n            initialValues={{ description: \"\" }}\r\n          >\r\n            {({ handleSubmit, handleChange, values }) => (\r\n              <form\r\n                ref={element => {\r\n                  this.form = element;\r\n                }}\r\n                noValidate\r\n                autoComplete='off'\r\n                onSubmit={handleSubmit}\r\n                action='https://formspree.io/mbjaozdw'\r\n                method='POST'\r\n              >\r\n                <TextField\r\n                  className={classes.description}\r\n                  multiline\r\n                  rowsMax={6}\r\n                  name='description'\r\n                  label='Description'\r\n                  helperText='Describe the bug to report'\r\n                  autoFocus={true}\r\n                  value={values.description}\r\n                  onChange={event => {\r\n                    this.setState({ status: \"\" });\r\n                    handleChange(event);\r\n                  }}\r\n                  disabled={status === \"SUCCESS\"}\r\n                />\r\n\r\n                <div className={classes.submit}>\r\n                  {status === \"SUCCESS\" ? (\r\n                    <p className={classes.submitted}>Submitted!</p>\r\n                  ) : submitting ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    <Button\r\n                      color='primary'\r\n                      type='submit'\r\n                      disabled={!values.description}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  )}\r\n                  {status === \"ERROR\" && (\r\n                    <p className={classes.error}>Ooops! There was an error.</p>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ReportBug);\r\n","import React from \"react\";\r\nimport BugReportIcon from \"@material-ui/icons/BugReportOutlined\";\r\nimport FavoriteIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Info from \"./Info\";\r\nimport ReportBug from \"./ReportBug\";\r\n\r\nconst styles = {\r\n  actions: {\r\n    position: \"absolute\",\r\n    top: 15,\r\n    left: 15\r\n  }\r\n};\r\n\r\nclass Actions extends React.Component {\r\n  state = { open: false, showInfo: false, showReportBug: false };\r\n\r\n  render() {\r\n    const { classes, show } = this.props;\r\n    const { open, showInfo, showReportBug } = this.state;\r\n    return (\r\n      <div>\r\n        <SpeedDial\r\n          ariaLabel='Actions'\r\n          className={classes.actions}\r\n          icon={<SpeedDialIcon />}\r\n          onClose={() => this.setState({ open: false })}\r\n          onOpen={() => this.setState({ open: true })}\r\n          open={open}\r\n          direction='down'\r\n        >\r\n          <SpeedDialAction\r\n            icon={<FavoriteIcon />}\r\n            tooltipTitle={\"Like\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => this.setState({ open: false })}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<ShareIcon />}\r\n            tooltipTitle={\"Share\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => this.setState({ open: false })}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<InfoIcon />}\r\n            tooltipTitle={\"Info\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => {\r\n              show();\r\n              this.setState({ open: false, showInfo: true });\r\n            }}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<BugReportIcon />}\r\n            tooltipTitle={\"Report Bug\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => {\r\n              show();\r\n              this.setState({ open: false, showReportBug: true });\r\n            }}\r\n          />\r\n        </SpeedDial>\r\n\r\n        {showInfo && (\r\n          <Info onClose={() => this.setState({ showInfo: false })} />\r\n        )}\r\n        {showReportBug && (\r\n          <ReportBug onClose={() => this.setState({ showReportBug: false })} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Actions);\r\n","export const constants = {\r\n  BASE_WIDTH: 60,\r\n  BASE_HEIGHT: 20,\r\n  DIV_COLORS: [\r\n    \"rgb(215, 169, 227, 0.4)\",\r\n    \"rgb(139, 190, 232, 0.4)\",\r\n    \"rgb(168, 213, 186, 0.4)\"\r\n  ],\r\n  DISK_COLORS: [\r\n    // 12 colors, referenced from\r\n    // https://venngage.com/blog/how-to-pick-colors/\r\n    \"#fef200\",\r\n    \"#9bca3b\",\r\n    \"#27b252\",\r\n    \"#0db0a1\",\r\n    \"#3654a7\",\r\n    \"#493a98\",\r\n    \"#92278f\",\r\n    \"#92296d\",\r\n    \"#ed1923\",\r\n    \"#ef4224\",\r\n    \"#f36522\",\r\n    \"#f89f1a\"\r\n  ]\r\n};\r\n","import moment from \"moment\";\r\n\r\nimport { constants } from \"./constants\";\r\n\r\nexport const formatTime = seconds => {\r\n  const duration = moment.duration(seconds, \"seconds\");\r\n  return (\r\n    Math.floor(duration.asHours()) +\r\n    moment.utc(duration.asMilliseconds()).format(\":mm:ss\")\r\n  );\r\n};\r\n\r\nexport const get1ToN = n => {\r\n  const result = [];\r\n  for (let i = 1; i <= n; i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getLast = array => array[array.length - 1];\r\n\r\nexport const getUpToSecondLast = array => array.slice(0, array.length - 1);\r\n\r\nexport const getMeasurements = size => {\r\n  const { BASE_WIDTH, BASE_HEIGHT } = constants;\r\n  const multiplier = size * 0.4 + 0.6;\r\n  return [Math.ceil(BASE_WIDTH * multiplier), BASE_HEIGHT];\r\n};\r\n\r\nexport const solve = (numDisks, initCol1, initCol2, initCol3) => {\r\n  let col1 = [...initCol1];\r\n  let col2 = [...initCol2];\r\n  let col3 = [...initCol3];\r\n\r\n  let steps = \"\";\r\n\r\n  const moveDisk = (fromCol, toCol, size) => {\r\n    if (fromCol === col1) {\r\n      col1.pop();\r\n    } else if (fromCol === col2) {\r\n      col2.pop();\r\n    } else {\r\n      col3.pop();\r\n    }\r\n\r\n    if (toCol === col1) {\r\n      col1.push(size);\r\n    } else if (toCol === col2) {\r\n      col2.push(size);\r\n    } else {\r\n      col3.push(size);\r\n    }\r\n  };\r\n\r\n  // algorithm from\r\n  // https://stackoverflow.com/questions/49220476/tower-of-hanoi-solving-halfway-algorithm-in-python\r\n  const moveDisks = async (maxSize, toCol) => {\r\n    let fromCol;\r\n    let size = maxSize;\r\n    while (size >= 1) {\r\n      if (col1 !== toCol && col1.includes(size)) {\r\n        fromCol = col1;\r\n        break;\r\n      }\r\n      if (col2 !== toCol && col2.includes(size)) {\r\n        fromCol = col2;\r\n        break;\r\n      }\r\n      if (col3 !== toCol && col3.includes(size)) {\r\n        fromCol = col3;\r\n        break;\r\n      }\r\n      size--;\r\n    }\r\n\r\n    // all disks are already in the to-column\r\n    if (size === 0) {\r\n      return;\r\n    }\r\n\r\n    const otherCol =\r\n      col1 !== fromCol && col1 !== toCol\r\n        ? col1\r\n        : col2 !== fromCol && col2 !== toCol\r\n        ? col2\r\n        : col3;\r\n\r\n    moveDisks(size - 1, otherCol);\r\n\r\n    moveDisk(fromCol, toCol, size);\r\n    steps += `${JSON.stringify({ col1, col2, col3 })},`;\r\n\r\n    moveDisks(size - 1, toCol);\r\n  };\r\n\r\n  moveDisks(numDisks, col2);\r\n\r\n  return `[${steps.slice(0, -1)}]`;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nimport { getMeasurements } from \"../helpers\";\r\n\r\nfunction Disk(props) {\r\n  const { active, xy, move, size, color, divWidth } = props;\r\n  const [width, height] = getMeasurements(size);\r\n\r\n  // spring to smoothen drag\r\n  const [{ x, y }, setPosition] = useSpring(() => ({ x: xy[0], y: xy[1] }));\r\n\r\n  // move disks via props.xy\r\n  useEffect(() => {\r\n    setPosition({ x: props.xy[0], y: props.xy[1] });\r\n  }, [setPosition, props.xy]);\r\n\r\n  // z-index to put moving disk in front\r\n  const [zIndex, setZIndex] = useState(1);\r\n\r\n  const myRef = React.useRef(null);\r\n\r\n  const bind = useGesture(\r\n    {\r\n      onDrag: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          setPosition({ x: x - width / 2, y: y - height / 2 });\r\n          setZIndex(99);\r\n        }\r\n      },\r\n      onDragEnd: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          const colNum = x <= divWidth ? 1 : x <= 2 * divWidth ? 2 : 3;\r\n          const moveTo = move(colNum, size);\r\n          setPosition({ x: moveTo[0], y: moveTo[1] });\r\n          setZIndex(1);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      domTarget: myRef,\r\n      eventOptions: { passive: false }\r\n    }\r\n  );\r\n\r\n  React.useEffect(bind, [bind]);\r\n\r\n  return (\r\n    <animated.div\r\n      ref={myRef}\r\n      {...bind()}\r\n      style={{\r\n        position: \"absolute\",\r\n        x,\r\n        y,\r\n        zIndex,\r\n        width,\r\n        height,\r\n        borderRadius: \"20px\",\r\n        background: color,\r\n        cursor: active ? \"grab\" : \"default\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n      }}\r\n    >\r\n      <span style={{ alignSelf: \"center\" }}>{size}</span>\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nexport default Disk;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik } from \"formik\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  },\r\n  error: {\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass GameOver extends React.Component {\r\n  state = {\r\n    fetching: true,\r\n    highScore: null,\r\n    submitting: false,\r\n    showError: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { numDisks } = this.props;\r\n    fetch(privateInfo.api_endpoint, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ action: \"get-high-scores\" })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          const highScores = response.highScores.filter(\r\n            highScore => highScore.NumDisks === numDisks\r\n          );\r\n          this.setState({\r\n            fetching: false,\r\n            highScore: highScores.length ? highScores[0] : null\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false });\r\n          console.log(response.message);\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  renderTimeSubmitForm = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Formik onSubmit={this.handleSubmit} initialValues={{ name: \"\" }}>\r\n        {({ handleSubmit, handleChange, values }) => (\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              name='name'\r\n              label='Name'\r\n              helperText='Enter your name to display on the leaderboard'\r\n              autoFocus={true}\r\n              value={values.name}\r\n              onChange={event => {\r\n                this.setState({ showError: false });\r\n                handleChange(event);\r\n              }}\r\n            />\r\n            <Button\r\n              className={classes.submit}\r\n              color='primary'\r\n              type='submit'\r\n              disabled={!values.name}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  };\r\n\r\n  handleSubmit = ({ name }) => {\r\n    const { numDisks, time, onSubmit } = this.props;\r\n    this.setState({ submitting: true }, () => {\r\n      fetch(privateInfo.api_endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          action: \"update-high-scores\",\r\n          NumDisks: numDisks,\r\n          name,\r\n          time\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          if (response.success) {\r\n            this.setState({\r\n              submitting: false\r\n            });\r\n            onSubmit();\r\n          } else {\r\n            this.setState({ submitting: false, showError: true });\r\n            console.log(response.message);\r\n          }\r\n        })\r\n        .catch(error => console.log(\"Unable to connect to API.\", error));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, numDisks, time, onClose } = this.props;\r\n    const { fetching, highScore, submitting, showError } = this.state;\r\n    return (\r\n      <div>\r\n        <Dialog className={classes.root} open={true} onClose={onClose}>\r\n          <DialogTitle>Your time is {formatTime(time)}!</DialogTitle>\r\n          <DialogContent className={classes.content}>\r\n            {fetching ? (\r\n              <CircularProgress />\r\n            ) : highScore ? (\r\n              time < highScore.time ? (\r\n                <div>\r\n                  <div>\r\n                    You beat the current high score of{\" \"}\r\n                    <strong>{highScore.name}</strong> of{\" \"}\r\n                    <strong>{formatTime(highScore.time)}</strong> for {numDisks}{\" \"}\r\n                    disk(s).\r\n                  </div>\r\n                  <br />\r\n                  {submitting ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    this.renderTimeSubmitForm()\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div>\r\n                    You haven't beaten the current high score of{\" \"}\r\n                    <strong>{highScore.name}</strong> of{\" \"}\r\n                    <strong>{formatTime(highScore.time)}</strong> for {numDisks}{\" \"}\r\n                    disk(s).\r\n                  </div>\r\n                  <p>Try again!</p>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <div>\r\n                <div>\r\n                  There is no high score for now for {numDisks} disk(s).\r\n                </div>\r\n                <br />\r\n                {submitting ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  this.renderTimeSubmitForm()\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {showError && (\r\n              <p className={classes.error}>\r\n                Something went wrong. Try again later.\r\n              </p>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(GameOver);\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  },\r\n  error: {\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass Leaderboard extends React.Component {\r\n  state = { fetching: true, highScores: [], showError: false };\r\n\r\n  componentDidMount() {\r\n    fetch(privateInfo.api_endpoint, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ action: \"get-high-scores\" })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          this.setState({\r\n            fetching: false,\r\n            highScores: response.highScores.sort(\r\n              ({ NumDisks: NumDisks1 }, { NumDisks: NumDisks2 }) =>\r\n                NumDisks1 - NumDisks2\r\n            )\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false, showError: true });\r\n          console.log(response.message);\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    const { fetching, highScores, showError } = this.state;\r\n    return (\r\n      <Dialog className={classes.root} open={true} onClose={onClose}>\r\n        <DialogTitle>Leaderboard</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          {fetching ? (\r\n            <CircularProgress />\r\n          ) : highScores.length ? (\r\n            <Table size='small'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>No. Disks</TableCell>\r\n                  <TableCell align='right'>Name</TableCell>\r\n                  <TableCell align='right'>Time</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {highScores.map(highScore => {\r\n                  const { time } = highScore;\r\n                  return (\r\n                    <TableRow key={highScore.NumDisks}>\r\n                      <TableCell component='th' scope='row'>\r\n                        {highScore.NumDisks}\r\n                      </TableCell>\r\n                      <TableCell align='right'>{highScore.name}</TableCell>\r\n                      <TableCell align='right'>{formatTime(time)}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            !showError && \"There are no high scores for now.\"\r\n          )}\r\n\r\n          {showError && (\r\n            <div className={classes.error}>\r\n              Something went wrong. Try again later.\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Leaderboard);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\n\r\nconst styles = {\r\n  time: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\",\r\n    cursor: \"pointer\"\r\n  },\r\n  warning: {\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass Timer extends React.Component {\r\n  state = { handler: null, seconds: 0 };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.running && this.props.running) {\r\n      const handler = setInterval(() => {\r\n        const { seconds } = this.state;\r\n        this.setState({ seconds: seconds + 1 });\r\n      }, 1000);\r\n      this.setState({ handler });\r\n    }\r\n\r\n    if (prevProps.running && !this.props.running) {\r\n      const { handler } = this.state;\r\n      clearInterval(handler);\r\n\r\n      if (!prevProps.disabled && !this.props.disabled) {\r\n        this.props.recordTime(this.state.seconds);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    clearInterval(handler);\r\n  }\r\n\r\n  render() {\r\n    const { classes, disabled, recordTime } = this.props;\r\n    const { seconds } = this.state;\r\n    return (\r\n      <div style={{ color: disabled ? \"#f44336\" : \"inherit\" }}>\r\n        <div className={classes.time} onClick={() => recordTime(seconds)}>\r\n          {formatTime(seconds)}\r\n        </div>\r\n        {disabled && (\r\n          <div className={classes.warning}>Time is now invalid!</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Timer);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Confetti from \"react-confetti\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Actions from \"./actions/Actions\";\r\nimport Disk from \"./Disk\";\r\nimport GameOver from \"./GameOver\";\r\nimport Leaderboard from \"./Leaderboard\";\r\nimport Timer from \"./Timer\";\r\nimport {\r\n  get1ToN,\r\n  getLast,\r\n  getUpToSecondLast,\r\n  getMeasurements,\r\n  solve\r\n} from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\n\r\nconst { DISK_COLORS } = constants;\r\n\r\nconst styles = {\r\n  controlButtons: {\r\n    position: \"absolute\",\r\n    top: 30,\r\n    left: 0,\r\n    right: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  leaderboardButton: {\r\n    position: \"absolute\",\r\n    top: 70,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  timer: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  success: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\"\r\n  }\r\n};\r\n\r\nclass Controller extends React.Component {\r\n  state = {\r\n    col1: get1ToN(this.props.numDisks).reverse(),\r\n    col2: [],\r\n    col3: [],\r\n    solving: false,\r\n    handler: null,\r\n    step: 0,\r\n    showLeaderboard: false,\r\n    isTiming: false,\r\n    time: null,\r\n    hasUsedSolve: false,\r\n    showGameOver: false,\r\n    hasSubmitted: false,\r\n    showSubmissionSuccess: false\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    if (handler) {\r\n      clearInterval(handler);\r\n    }\r\n  }\r\n\r\n  isGameOver = () => {\r\n    const { numDisks } = this.props;\r\n    const { col2, col3 } = this.state;\r\n    return col2.length === numDisks || col3.length === numDisks;\r\n  };\r\n\r\n  getIsActive = size => {\r\n    const { col1, col2, col3, solving } = this.state;\r\n    return (\r\n      !solving &&\r\n      !this.isGameOver() &&\r\n      (getLast(col1) === size ||\r\n        getLast(col2) === size ||\r\n        getLast(col3) === size)\r\n    );\r\n  };\r\n\r\n  getPosition = (col1, col2, col3, size) => {\r\n    const { windowWidth } = this.props;\r\n    const halfDivWidth = windowWidth / 6;\r\n    const diskWidth = getMeasurements(size)[0];\r\n    if (col1.includes(size)) {\r\n      const x = halfDivWidth - diskWidth / 2;\r\n      const y = this.getY(col1, size);\r\n      return [x, y];\r\n    }\r\n\r\n    if (col2.includes(size)) {\r\n      const x = halfDivWidth * 3 - diskWidth / 2;\r\n      const y = this.getY(col2, size);\r\n      return [x, y];\r\n    }\r\n\r\n    const x = halfDivWidth * 5 - diskWidth / 2;\r\n    const y = this.getY(col3, size);\r\n    return [x, y];\r\n  };\r\n\r\n  getY = (col, size) => {\r\n    const { windowHeight } = this.props;\r\n    const divHeight = windowHeight - 150;\r\n    const diskHeight = getMeasurements(size)[1];\r\n    let y = divHeight - diskHeight;\r\n    let i = 0;\r\n    while (col[i] !== size) {\r\n      y -= getMeasurements(col[i])[1];\r\n      i++;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  move = (colNum, size) => {\r\n    const { hasUsedSolve } = this.state;\r\n    if (!hasUsedSolve) {\r\n      this.setState({ isTiming: true });\r\n    }\r\n\r\n    const { col1, col2, col3 } = this.state;\r\n    // prettier-ignore\r\n    const fromCol = col1.includes(size) ? col1 : col2.includes(size) ? col2 : col3;\r\n    const toCol = colNum === 1 ? col1 : colNum === 2 ? col2 : col3;\r\n\r\n    if (fromCol === toCol || size > getLast(toCol)) {\r\n      return this.getPosition(col1, col2, col3, size);\r\n    }\r\n\r\n    const newFromCol = getUpToSecondLast(fromCol);\r\n    const newToCol = [...toCol, size];\r\n\r\n    // prettier-ignore\r\n    const newCol1 = col1 === fromCol ? newFromCol : col1 === toCol ? newToCol : col1\r\n    // prettier-ignore\r\n    const newCol2 = col2 === fromCol ? newFromCol : col2 === toCol ? newToCol : col2\r\n    // prettier-ignore\r\n    const newCol3 = col3 === fromCol ? newFromCol : col3 === toCol ? newToCol : col3\r\n\r\n    this.setState({\r\n      col1: newCol1,\r\n      col2: newCol2,\r\n      col3: newCol3\r\n    });\r\n    return this.getPosition(newCol1, newCol2, newCol3, size);\r\n  };\r\n\r\n  solve = () => {\r\n    this.setState({ isTiming: false, hasUsedSolve: true });\r\n\r\n    const { numDisks } = this.props;\r\n    const { col1, col2, col3 } = this.state;\r\n    const steps = JSON.parse(solve(numDisks, [...col1], [...col2], [...col3]));\r\n    this.setState({ solving: true, steps, step: 0 }, () => {\r\n      const handler = setInterval(() => {\r\n        const { steps, step } = this.state;\r\n        if (step < steps.length) {\r\n          this.setState({ ...steps[step], step: step + 1 });\r\n        } else {\r\n          clearInterval(handler);\r\n        }\r\n      }, 1000);\r\n      this.setState({ handler });\r\n    });\r\n  };\r\n\r\n  stop = () => {\r\n    const { handler } = this.state;\r\n    this.setState({ solving: false }, () => clearInterval(handler));\r\n  };\r\n\r\n  show = state => {\r\n    const { solving, handler } = this.state;\r\n    if (solving && !this.isGameOver()) {\r\n      this.setState({ solving: false, ...state }, () => clearInterval(handler));\r\n    } else {\r\n      this.setState({ ...state });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      numDisks,\r\n      windowWidth,\r\n      windowHeight,\r\n      restart\r\n    } = this.props;\r\n    const {\r\n      col1,\r\n      col2,\r\n      col3,\r\n      solving,\r\n      showLeaderboard,\r\n      isTiming,\r\n      time,\r\n      hasUsedSolve,\r\n      showGameOver,\r\n      hasSubmitted,\r\n      showSubmissionSuccess\r\n    } = this.state;\r\n    const divWidth = windowWidth / 3;\r\n    const isGameOver = this.isGameOver();\r\n    return (\r\n      <div>\r\n        <Actions show={this.show} />\r\n\r\n        <div className={classes.controlButtons}>\r\n          {!solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.solve}>\r\n              Solve\r\n            </Button>\r\n          )}\r\n          {solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.stop}>\r\n              Stop\r\n            </Button>\r\n          )}\r\n          <Button color='secondary' onClick={restart}>\r\n            Restart\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.leaderboardButton}>\r\n          <Button onClick={() => this.show({ showLeaderboard: true })}>\r\n            Leaderboard\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.timer}>\r\n          <Timer\r\n            running={isTiming && !isGameOver}\r\n            disabled={hasUsedSolve}\r\n            recordTime={time => this.setState({ time, showGameOver: true })}\r\n          />\r\n        </div>\r\n\r\n        {showLeaderboard && (\r\n          <Leaderboard\r\n            onClose={() => this.setState({ showLeaderboard: false })}\r\n          />\r\n        )}\r\n\r\n        {showGameOver && isGameOver && !hasUsedSolve && !hasSubmitted && (\r\n          <GameOver\r\n            numDisks={numDisks}\r\n            time={time}\r\n            onClose={() => this.setState({ showGameOver: false })}\r\n            onSubmit={() =>\r\n              this.setState({ hasSubmitted: true, showSubmissionSuccess: true })\r\n            }\r\n          />\r\n        )}\r\n\r\n        {showSubmissionSuccess && (\r\n          <Snackbar\r\n            className={classes.success}\r\n            open={true}\r\n            message='High score submitted!'\r\n            onClose={() => this.setState({ showSubmissionSuccess: false })}\r\n          />\r\n        )}\r\n\r\n        {isGameOver && <Confetti width={windowWidth} height={windowHeight} />}\r\n\r\n        {get1ToN(numDisks).map(size => (\r\n          <Disk\r\n            key={size}\r\n            active={this.getIsActive(size)}\r\n            xy={this.getPosition(col1, col2, col3, size)}\r\n            move={this.move}\r\n            size={size}\r\n            color={DISK_COLORS[size - 1]}\r\n            divWidth={divWidth}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Controller);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { get1ToN } from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\n\r\nconst { DISK_COLORS } = constants;\r\nconst maxNumDisks = DISK_COLORS.length;\r\n\r\nconst styles = {\r\n  root: {\r\n    marginTop: 30\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass Initializer extends React.Component {\r\n  state = { error: false };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const numDisks = parseInt(data.get(\"numDisks\"));\r\n    if (get1ToN(maxNumDisks).includes(numDisks)) {\r\n      this.props.setNumDisks(numDisks);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { error } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <form onSubmit={this.handleSubmit} noValidate autoComplete='off'>\r\n          <TextField\r\n            name='numDisks'\r\n            label='Number of Disks'\r\n            helperText={`Enter a number up to ${maxNumDisks}`}\r\n            autoFocus={true}\r\n            error={error}\r\n          />\r\n          <br />\r\n          <Button className={classes.submit} color='primary' type='submit'>\r\n            Go\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Initializer);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Controller from \"./components/Controller\";\r\nimport Initializer from \"./components/Initializer\";\r\nimport { constants } from \"./constants\";\r\n\r\nconst { DIV_COLORS } = constants;\r\n\r\nconst styles = {\r\n  overground: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    userSelect: \"none\"\r\n  },\r\n  game: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    windowWidth: window.innerWidth,\r\n    windowHeight: window.innerHeight,\r\n    initializing: true,\r\n    numDisks: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", ({ target }) =>\r\n      this.setState({\r\n        windowWidth: target.innerWidth,\r\n        windowHeight: target.innerHeight\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { windowWidth, windowHeight, initializing, numDisks } = this.state;\r\n    const divWidth = windowWidth / 3;\r\n    const divHeight = windowHeight - 150;\r\n    return (\r\n      <div>\r\n        <div className={classes.overground}>\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[0]\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[1]\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[2]\r\n            }}\r\n          />\r\n\r\n          <div className={classes.game}>\r\n            {initializing ? (\r\n              <Initializer\r\n                setNumDisks={numDisks =>\r\n                  this.setState({ initializing: false, numDisks })\r\n                }\r\n              />\r\n            ) : (\r\n              <Controller\r\n                numDisks={numDisks}\r\n                windowWidth={windowWidth}\r\n                windowHeight={windowHeight}\r\n                restart={() => this.setState({ initializing: true })}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: windowWidth,\r\n            height: 150,\r\n            background: \"gainsboro\"\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}