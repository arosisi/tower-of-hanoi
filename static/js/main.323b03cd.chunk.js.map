{"version":3,"sources":["constants.js","helpers.js","components/Disk.js","components/GameOver.js","components/Leaderboard.js","components/Timer.js","components/Controller.js","components/Initializer.js","App.js","serviceWorker.js","index.js"],"names":["constants","formatTime","seconds","duration","moment","Math","floor","asHours","utc","asMilliseconds","format","get1ToN","n","result","i","push","getLast","array","length","getUpToSecondLast","slice","getMeasurements","size","BASE_WIDTH","BASE_HEIGHT","multiplier","ceil","solve","numDisks","initCol1","initCol2","initCol3","col1","col2","col3","steps","moveDisk","fromCol","toCol","pop","moveDisks","maxSize","a","includes","JSON","stringify","Disk","props","active","xy","move","color","divWidth","width","height","useSpring","x","y","setPosition","useEffect","useState","zIndex","setZIndex","myRef","React","useRef","bind","useGesture","onDrag","event","preventDefault","onDragEnd","moveTo","domTarget","eventOptions","passive","div","ref","style","position","borderRadius","background","cursor","display","justifyContent","alignSelf","GameOver","state","fetching","highScore","submitting","showError","renderTimeSubmitForm","classes","onSubmit","handleSubmit","initialValues","name","handleChange","values","TextField","label","helperText","autoFocus","value","onChange","setState","Button","className","submit","type","disabled","time","fetch","privateInfo","api_endpoint","method","headers","body","action","NumDisks","then","response","json","success","console","log","message","catch","error","this","highScores","filter","onClose","Dialog","root","open","DialogTitle","DialogContent","content","CircularProgress","Component","withStyles","textAlign","marginBottom","marginTop","Leaderboard","Table","TableHead","TableRow","TableCell","align","TableBody","map","key","component","scope","Timer","handler","prevProps","running","setInterval","clearInterval","recordTime","onClick","warning","margin","DISK_COLORS","Controller","reverse","solving","step","showLeaderboard","isTiming","hasUsedSolve","showGameOver","hasSubmitted","showSubmissionSuccess","isGameOver","getIsActive","getPosition","halfDivWidth","windowWidth","diskWidth","getY","col","windowHeight","colNum","newFromCol","newToCol","newCol1","newCol2","newCol3","parse","stop","fetchHighScores","sort","restart","controlButtons","leaderboardButton","timer","Snackbar","top","left","right","maxNumDisks","Initializer","data","FormData","target","parseInt","get","setNumDisks","noValidate","autoComplete","DIV_COLORS","App","window","innerWidth","innerHeight","initializing","addEventListener","divHeight","overground","game","userSelect","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.323b03cd.chunk.js","sourcesContent":["export const constants = {\r\n  BASE_WIDTH: 60,\r\n  BASE_HEIGHT: 20,\r\n  DIV_COLORS: [\r\n    \"rgb(215, 169, 227, 0.4)\",\r\n    \"rgb(139, 190, 232, 0.4)\",\r\n    \"rgb(168, 213, 186, 0.4)\"\r\n  ],\r\n  DISK_COLORS: [\r\n    // 12 colors, referenced from\r\n    // https://venngage.com/blog/how-to-pick-colors/\r\n    \"#fef200\",\r\n    \"#9bca3b\",\r\n    \"#27b252\",\r\n    \"#0db0a1\",\r\n    \"#3654a7\",\r\n    \"#493a98\",\r\n    \"#92278f\",\r\n    \"#92296d\",\r\n    \"#ed1923\",\r\n    \"#ef4224\",\r\n    \"#f36522\",\r\n    \"#f89f1a\"\r\n  ]\r\n};\r\n","import moment from \"moment\";\r\n\r\nimport { constants } from \"./constants\";\r\n\r\nexport const formatTime = seconds => {\r\n  const duration = moment.duration(seconds, \"seconds\");\r\n  return (\r\n    Math.floor(duration.asHours()) +\r\n    moment.utc(duration.asMilliseconds()).format(\":mm:ss\")\r\n  );\r\n};\r\n\r\nexport const get1ToN = n => {\r\n  const result = [];\r\n  for (let i = 1; i <= n; i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getLast = array => array[array.length - 1];\r\n\r\nexport const getUpToSecondLast = array => array.slice(0, array.length - 1);\r\n\r\nexport const getMeasurements = size => {\r\n  const { BASE_WIDTH, BASE_HEIGHT } = constants;\r\n  const multiplier = size * 0.4 + 0.6;\r\n  return [Math.ceil(BASE_WIDTH * multiplier), BASE_HEIGHT];\r\n};\r\n\r\nexport const solve = (numDisks, initCol1, initCol2, initCol3) => {\r\n  let col1 = [...initCol1];\r\n  let col2 = [...initCol2];\r\n  let col3 = [...initCol3];\r\n\r\n  let steps = \"\";\r\n\r\n  const moveDisk = (fromCol, toCol, size) => {\r\n    if (fromCol === col1) {\r\n      col1.pop();\r\n    } else if (fromCol === col2) {\r\n      col2.pop();\r\n    } else {\r\n      col3.pop();\r\n    }\r\n\r\n    if (toCol === col1) {\r\n      col1.push(size);\r\n    } else if (toCol === col2) {\r\n      col2.push(size);\r\n    } else {\r\n      col3.push(size);\r\n    }\r\n  };\r\n\r\n  // algorithm from\r\n  // https://stackoverflow.com/questions/49220476/tower-of-hanoi-solving-halfway-algorithm-in-python\r\n  const moveDisks = async (maxSize, toCol) => {\r\n    let fromCol;\r\n    let size = maxSize;\r\n    while (size >= 1) {\r\n      if (col1 !== toCol && col1.includes(size)) {\r\n        fromCol = col1;\r\n        break;\r\n      }\r\n      if (col2 !== toCol && col2.includes(size)) {\r\n        fromCol = col2;\r\n        break;\r\n      }\r\n      if (col3 !== toCol && col3.includes(size)) {\r\n        fromCol = col3;\r\n        break;\r\n      }\r\n      size--;\r\n    }\r\n\r\n    // all disks are already in the to-column\r\n    if (size === 0) {\r\n      return;\r\n    }\r\n\r\n    const otherCol =\r\n      col1 !== fromCol && col1 !== toCol\r\n        ? col1\r\n        : col2 !== fromCol && col2 !== toCol\r\n        ? col2\r\n        : col3;\r\n\r\n    moveDisks(size - 1, otherCol);\r\n\r\n    moveDisk(fromCol, toCol, size);\r\n    steps += `${JSON.stringify({ col1, col2, col3 })},`;\r\n\r\n    moveDisks(size - 1, toCol);\r\n  };\r\n\r\n  moveDisks(numDisks, col2);\r\n\r\n  return `[${steps.slice(0, -1)}]`;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nimport { getMeasurements } from \"../helpers\";\r\n\r\nfunction Disk(props) {\r\n  const { active, xy, move, size, color, divWidth } = props;\r\n  const [width, height] = getMeasurements(size);\r\n\r\n  // spring to smoothen drag\r\n  const [{ x, y }, setPosition] = useSpring(() => ({ x: xy[0], y: xy[1] }));\r\n\r\n  // move disks via props.xy\r\n  useEffect(() => {\r\n    setPosition({ x: props.xy[0], y: props.xy[1] });\r\n  }, [setPosition, props.xy]);\r\n\r\n  // z-index to put moving disk in front\r\n  const [zIndex, setZIndex] = useState(1);\r\n\r\n  const myRef = React.useRef(null);\r\n\r\n  const bind = useGesture(\r\n    {\r\n      onDrag: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          setPosition({ x: x - width / 2, y: y - height / 2 });\r\n          setZIndex(99);\r\n        }\r\n      },\r\n      onDragEnd: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          const colNum = x <= divWidth ? 1 : x <= 2 * divWidth ? 2 : 3;\r\n          const moveTo = move(colNum, size);\r\n          setPosition({ x: moveTo[0], y: moveTo[1] });\r\n          setZIndex(1);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      domTarget: myRef,\r\n      eventOptions: { passive: false }\r\n    }\r\n  );\r\n\r\n  React.useEffect(bind, [bind]);\r\n\r\n  return (\r\n    <animated.div\r\n      ref={myRef}\r\n      {...bind()}\r\n      style={{\r\n        position: \"absolute\",\r\n        x,\r\n        y,\r\n        zIndex,\r\n        width,\r\n        height,\r\n        borderRadius: \"20px\",\r\n        background: color,\r\n        cursor: active ? \"grab\" : \"default\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n      }}\r\n    >\r\n      <span style={{ alignSelf: \"center\" }}>{size}</span>\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nexport default Disk;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik } from \"formik\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  },\r\n  error: {\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass GameOver extends React.Component {\r\n  state = {\r\n    fetching: true,\r\n    highScore: null,\r\n    submitting: false,\r\n    showError: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { numDisks } = this.props;\r\n    fetch(privateInfo.api_endpoint, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ action: \"get-high-scores\" })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          const highScores = response.highScores.filter(\r\n            highScore => highScore.NumDisks === numDisks\r\n          );\r\n          this.setState({\r\n            fetching: false,\r\n            highScore: highScores.length ? highScores[0] : null\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false });\r\n          console.log(response.message);\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  renderTimeSubmitForm = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Formik onSubmit={this.handleSubmit} initialValues={{ name: \"\" }}>\r\n        {({ handleSubmit, handleChange, values }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <TextField\r\n              name='name'\r\n              label='Name'\r\n              helperText='Enter your name to display on the leaderboard'\r\n              autoFocus={true}\r\n              value={values.name}\r\n              onChange={event => {\r\n                this.setState({ showError: false });\r\n                handleChange(event);\r\n              }}\r\n            />\r\n            <Button\r\n              className={classes.submit}\r\n              color='primary'\r\n              type='submit'\r\n              disabled={!values.name}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  };\r\n\r\n  handleSubmit = ({ name }) => {\r\n    const { numDisks, time, onSubmit } = this.props;\r\n    this.setState({ submitting: true }, () => {\r\n      fetch(privateInfo.api_endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          action: \"update-high-scores\",\r\n          NumDisks: numDisks,\r\n          name,\r\n          time\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          if (response.success) {\r\n            this.setState({\r\n              submitting: false\r\n            });\r\n            onSubmit();\r\n          } else {\r\n            this.setState({ submitting: false, showError: true });\r\n            console.log(response.message);\r\n          }\r\n        })\r\n        .catch(error => console.log(\"Unable to connect to API.\", error));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, numDisks, time, onClose } = this.props;\r\n    const { fetching, highScore, submitting, showError } = this.state;\r\n    return (\r\n      <div>\r\n        <Dialog className={classes.root} open={true} onClose={onClose}>\r\n          <DialogTitle>Your time is {formatTime(time)}!</DialogTitle>\r\n          <DialogContent className={classes.content}>\r\n            {fetching ? (\r\n              <CircularProgress />\r\n            ) : highScore ? (\r\n              time < highScore.time ? (\r\n                <div>\r\n                  <div>\r\n                    You beat the current high score of{\" \"}\r\n                    <strong>{highScore.name}</strong> of{\" \"}\r\n                    <strong>{formatTime(highScore.time)}</strong> for {numDisks}{\" \"}\r\n                    disk(s).\r\n                  </div>\r\n                  <br />\r\n                  {submitting ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    this.renderTimeSubmitForm()\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div>\r\n                    You haven't beaten the current high score of{\" \"}\r\n                    <strong>{highScore.name}</strong> of{\" \"}\r\n                    <strong>{formatTime(highScore.time)}</strong> for {numDisks}{\" \"}\r\n                    disk(s).\r\n                  </div>\r\n                  <p>Try again!</p>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <div>\r\n                <div>\r\n                  There is no high score for now for {numDisks} disk(s).\r\n                </div>\r\n                <br />\r\n                {submitting ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  this.renderTimeSubmitForm()\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {showError && (\r\n              <p className={classes.error}>\r\n                Something went wrong. Try again later.\r\n              </p>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(GameOver);\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  }\r\n};\r\n\r\nclass Leaderboard extends React.Component {\r\n  render() {\r\n    const { classes, open, fetching, highScores, onClose } = this.props;\r\n    return (\r\n      <Dialog className={classes.root} open={open} onClose={onClose}>\r\n        <DialogTitle>Leaderboard</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          {fetching ? (\r\n            <CircularProgress />\r\n          ) : highScores.length ? (\r\n            <Table size='small'>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>No. Disks</TableCell>\r\n                  <TableCell align='right'>Name</TableCell>\r\n                  <TableCell align='right'>Time</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {highScores.map(highScore => {\r\n                  const { time } = highScore;\r\n                  return (\r\n                    <TableRow key={highScore.NumDisks}>\r\n                      <TableCell component='th' scope='row'>\r\n                        {highScore.NumDisks}\r\n                      </TableCell>\r\n                      <TableCell align='right'>{highScore.name}</TableCell>\r\n                      <TableCell align='right'>{formatTime(time)}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            \"There are no high scores for now.\"\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Leaderboard);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\n\r\nconst styles = {\r\n  time: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\",\r\n    cursor: \"pointer\"\r\n  },\r\n  warning: {\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass Timer extends React.Component {\r\n  state = { handler: null, seconds: 0 };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.running && this.props.running) {\r\n      const handler = setInterval(() => {\r\n        const { seconds } = this.state;\r\n        this.setState({ seconds: seconds + 1 });\r\n      }, 1000);\r\n      this.setState({ handler });\r\n    }\r\n\r\n    if (prevProps.running && !this.props.running) {\r\n      const { handler } = this.state;\r\n      clearInterval(handler);\r\n\r\n      if (!prevProps.disabled && !this.props.disabled) {\r\n        this.props.recordTime(this.state.seconds);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    clearInterval(handler);\r\n  }\r\n\r\n  render() {\r\n    const { classes, disabled, recordTime } = this.props;\r\n    const { seconds } = this.state;\r\n    return (\r\n      <div style={{ color: disabled ? \"#f44336\" : \"inherit\" }}>\r\n        <div className={classes.time} onClick={() => recordTime(seconds)}>\r\n          {formatTime(seconds)}\r\n        </div>\r\n        {disabled && (\r\n          <div className={classes.warning}>Time is now invalid!</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Timer);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Confetti from \"react-confetti\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Disk from \"./Disk\";\r\nimport GameOver from \"./GameOver\";\r\nimport Leaderboard from \"./Leaderboard\";\r\nimport Timer from \"./Timer\";\r\nimport {\r\n  get1ToN,\r\n  getLast,\r\n  getUpToSecondLast,\r\n  getMeasurements,\r\n  solve\r\n} from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst { DISK_COLORS } = constants;\r\n\r\nconst styles = {\r\n  controlButtons: {\r\n    position: \"absolute\",\r\n    top: 30,\r\n    left: 0,\r\n    right: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  leaderboardButton: {\r\n    position: \"absolute\",\r\n    top: 70,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  timer: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  success: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\"\r\n  }\r\n};\r\n\r\nclass Controller extends React.Component {\r\n  state = {\r\n    col1: get1ToN(this.props.numDisks).reverse(),\r\n    col2: [],\r\n    col3: [],\r\n    solving: false,\r\n    handler: null,\r\n    step: 0,\r\n    showLeaderboard: false,\r\n    fetching: false,\r\n    highScores: [],\r\n    isTiming: false,\r\n    time: null,\r\n    hasUsedSolve: false,\r\n    showGameOver: false,\r\n    hasSubmitted: false,\r\n    showSubmissionSuccess: false\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    if (handler) {\r\n      clearInterval(handler);\r\n    }\r\n  }\r\n\r\n  isGameOver = () => {\r\n    const { numDisks } = this.props;\r\n    const { col2, col3 } = this.state;\r\n    return col2.length === numDisks || col3.length === numDisks;\r\n  };\r\n\r\n  getIsActive = size => {\r\n    const { col1, col2, col3, solving } = this.state;\r\n    return (\r\n      !solving &&\r\n      !this.isGameOver() &&\r\n      (getLast(col1) === size ||\r\n        getLast(col2) === size ||\r\n        getLast(col3) === size)\r\n    );\r\n  };\r\n\r\n  getPosition = (col1, col2, col3, size) => {\r\n    const { windowWidth } = this.props;\r\n    const halfDivWidth = windowWidth / 6;\r\n    const diskWidth = getMeasurements(size)[0];\r\n    if (col1.includes(size)) {\r\n      const x = halfDivWidth - diskWidth / 2;\r\n      const y = this.getY(col1, size);\r\n      return [x, y];\r\n    }\r\n\r\n    if (col2.includes(size)) {\r\n      const x = halfDivWidth * 3 - diskWidth / 2;\r\n      const y = this.getY(col2, size);\r\n      return [x, y];\r\n    }\r\n\r\n    const x = halfDivWidth * 5 - diskWidth / 2;\r\n    const y = this.getY(col3, size);\r\n    return [x, y];\r\n  };\r\n\r\n  getY = (col, size) => {\r\n    const { windowHeight } = this.props;\r\n    const divHeight = windowHeight - 150;\r\n    const diskHeight = getMeasurements(size)[1];\r\n    let y = divHeight - diskHeight;\r\n    let i = 0;\r\n    while (col[i] !== size) {\r\n      y -= getMeasurements(col[i])[1];\r\n      i++;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  move = (colNum, size) => {\r\n    const { hasUsedSolve } = this.state;\r\n    if (!hasUsedSolve) {\r\n      this.setState({ isTiming: true });\r\n    }\r\n\r\n    const { col1, col2, col3 } = this.state;\r\n    // prettier-ignore\r\n    const fromCol = col1.includes(size) ? col1 : col2.includes(size) ? col2 : col3;\r\n    const toCol = colNum === 1 ? col1 : colNum === 2 ? col2 : col3;\r\n\r\n    if (fromCol === toCol || size > getLast(toCol)) {\r\n      return this.getPosition(col1, col2, col3, size);\r\n    }\r\n\r\n    const newFromCol = getUpToSecondLast(fromCol);\r\n    const newToCol = [...toCol, size];\r\n\r\n    // prettier-ignore\r\n    const newCol1 = col1 === fromCol ? newFromCol : col1 === toCol ? newToCol : col1\r\n    // prettier-ignore\r\n    const newCol2 = col2 === fromCol ? newFromCol : col2 === toCol ? newToCol : col2\r\n    // prettier-ignore\r\n    const newCol3 = col3 === fromCol ? newFromCol : col3 === toCol ? newToCol : col3\r\n\r\n    this.setState({\r\n      col1: newCol1,\r\n      col2: newCol2,\r\n      col3: newCol3\r\n    });\r\n    return this.getPosition(newCol1, newCol2, newCol3, size);\r\n  };\r\n\r\n  solve = () => {\r\n    this.setState({ isTiming: false, hasUsedSolve: true });\r\n\r\n    const { numDisks } = this.props;\r\n    const { col1, col2, col3 } = this.state;\r\n    const steps = JSON.parse(solve(numDisks, [...col1], [...col2], [...col3]));\r\n    this.setState({ solving: true, steps, step: 0 }, () => {\r\n      const handler = setInterval(() => {\r\n        const { steps, step } = this.state;\r\n        if (step < steps.length) {\r\n          this.setState({ ...steps[step], step: step + 1 });\r\n        } else {\r\n          clearInterval(handler);\r\n        }\r\n      }, 1000);\r\n      this.setState({ handler });\r\n    });\r\n  };\r\n\r\n  stop = () => {\r\n    const { handler } = this.state;\r\n    this.setState({ solving: false }, () => clearInterval(handler));\r\n  };\r\n\r\n  showLeaderboard = () => {\r\n    const { solving, handler } = this.state;\r\n    if (solving) {\r\n      this.setState(\r\n        { solving: false, showLeaderboard: true, fetching: true },\r\n        () => {\r\n          this.fetchHighScores();\r\n          clearInterval(handler);\r\n        }\r\n      );\r\n    } else {\r\n      this.setState(\r\n        { showLeaderboard: true, fetching: true },\r\n        this.fetchHighScores\r\n      );\r\n    }\r\n  };\r\n\r\n  fetchHighScores = () => {\r\n    fetch(privateInfo.api_endpoint, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ action: \"get-high-scores\" })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response.success) {\r\n          this.setState({\r\n            fetching: false,\r\n            highScores: response.highScores.sort(\r\n              ({ NumDisks: NumDisks1 }, { NumDisks: NumDisks2 }) =>\r\n                NumDisks1 - NumDisks2\r\n            )\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false });\r\n          console.log(response.message);\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      numDisks,\r\n      windowWidth,\r\n      windowHeight,\r\n      restart\r\n    } = this.props;\r\n    const {\r\n      col1,\r\n      col2,\r\n      col3,\r\n      solving,\r\n      showLeaderboard,\r\n      fetching,\r\n      highScores,\r\n      isTiming,\r\n      time,\r\n      hasUsedSolve,\r\n      showGameOver,\r\n      hasSubmitted,\r\n      showSubmissionSuccess\r\n    } = this.state;\r\n    const divWidth = windowWidth / 3;\r\n    const isGameOver = this.isGameOver();\r\n    return (\r\n      <div>\r\n        <div className={classes.controlButtons}>\r\n          {!solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.solve}>\r\n              Solve\r\n            </Button>\r\n          )}\r\n          {solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.stop}>\r\n              Stop\r\n            </Button>\r\n          )}\r\n          <Button color='secondary' onClick={restart}>\r\n            Restart\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.leaderboardButton}>\r\n          <Button onClick={this.showLeaderboard}>Leaderboard</Button>\r\n        </div>\r\n\r\n        <div className={classes.timer}>\r\n          <Timer\r\n            running={isTiming && !isGameOver}\r\n            disabled={hasUsedSolve}\r\n            recordTime={time => this.setState({ time, showGameOver: true })}\r\n          />\r\n        </div>\r\n\r\n        <Leaderboard\r\n          open={showLeaderboard}\r\n          fetching={fetching}\r\n          highScores={highScores}\r\n          onClose={() => this.setState({ showLeaderboard: false })}\r\n        />\r\n\r\n        {showGameOver && isGameOver && !hasUsedSolve && !hasSubmitted && (\r\n          <GameOver\r\n            numDisks={numDisks}\r\n            time={time}\r\n            onClose={() => this.setState({ showGameOver: false })}\r\n            onSubmit={() =>\r\n              this.setState({ hasSubmitted: true, showSubmissionSuccess: true })\r\n            }\r\n          />\r\n        )}\r\n\r\n        {showSubmissionSuccess && (\r\n          <Snackbar\r\n            className={classes.success}\r\n            open={true}\r\n            message='High score submitted!'\r\n            onClose={() => this.setState({ showSubmissionSuccess: false })}\r\n          />\r\n        )}\r\n\r\n        {isGameOver && <Confetti width={windowWidth} height={windowHeight} />}\r\n\r\n        {get1ToN(numDisks).map(size => (\r\n          <Disk\r\n            key={size}\r\n            active={this.getIsActive(size)}\r\n            xy={this.getPosition(col1, col2, col3, size)}\r\n            move={this.move}\r\n            size={size}\r\n            color={DISK_COLORS[size - 1]}\r\n            divWidth={divWidth}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Controller);\r\n","import React from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { get1ToN } from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\n\r\nconst { DISK_COLORS } = constants;\r\nconst maxNumDisks = DISK_COLORS.length;\r\n\r\nconst styles = {\r\n  root: {\r\n    marginTop: 30\r\n  }\r\n};\r\n\r\nclass Initializer extends React.Component {\r\n  state = { error: false };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const numDisks = parseInt(data.get(\"numDisks\"));\r\n    if (get1ToN(maxNumDisks).includes(numDisks)) {\r\n      this.props.setNumDisks(numDisks);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { error } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <form onSubmit={this.handleSubmit} noValidate autoComplete='off'>\r\n          <TextField\r\n            name='numDisks'\r\n            label='Number of Disks'\r\n            helperText={`Enter a number up to ${maxNumDisks}`}\r\n            autoFocus={true}\r\n            error={error}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Initializer);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Controller from \"./components/Controller\";\r\nimport Initializer from \"./components/Initializer\";\r\nimport { constants } from \"./constants\";\r\n\r\nconst { DIV_COLORS } = constants;\r\n\r\nconst styles = {\r\n  overground: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    userSelect: \"none\"\r\n  },\r\n  game: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    windowWidth: window.innerWidth,\r\n    windowHeight: window.innerHeight,\r\n    initializing: true,\r\n    numDisks: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", ({ target }) =>\r\n      this.setState({\r\n        windowWidth: target.innerWidth,\r\n        windowHeight: target.innerHeight\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { windowWidth, windowHeight, initializing, numDisks } = this.state;\r\n    const divWidth = windowWidth / 3;\r\n    const divHeight = windowHeight - 150;\r\n    return (\r\n      <div>\r\n        <div className={classes.overground}>\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[0]\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[1]\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: divWidth,\r\n              height: divHeight,\r\n              background: DIV_COLORS[2]\r\n            }}\r\n          />\r\n\r\n          <div className={classes.game}>\r\n            {initializing ? (\r\n              <Initializer\r\n                setNumDisks={numDisks =>\r\n                  this.setState({ initializing: false, numDisks })\r\n                }\r\n              />\r\n            ) : (\r\n              <Controller\r\n                numDisks={numDisks}\r\n                windowWidth={windowWidth}\r\n                windowHeight={windowHeight}\r\n                restart={() => this.setState({ initializing: true })}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: windowWidth,\r\n            height: 150,\r\n            background: \"gainsboro\"\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}