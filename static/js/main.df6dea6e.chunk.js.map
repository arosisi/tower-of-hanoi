{"version":3,"sources":["components/actions/Info.js","components/actions/ReportBug.js","components/actions/Share.js","components/actions/Actions.js","constants.js","helpers.js","components/Disk.js","components/GameOver.js","components/Leaderboard.js","components/Likes.js","components/Timer.js","components/Controller.js","components/Initializer.js","App.js","serviceWorker.js","index.js"],"names":["Info","state","open","showInfo","this","props","classes","onClose","Dialog","DialogTitle","DialogContent","className","content","href","target","rel","React","Component","withStyles","marginTop","marginBottom","ReportBug","verified","submitting","status","handleSubmit","form","data","FormData","get","setState","xhr","XMLHttpRequest","method","action","setRequestHeader","onreadystatechange","readyState","DONE","send","windowWidth","root","onSubmit","initialValues","description","handleChange","values","ref","element","noValidate","autoComplete","privateInfo","form_endpoint","TextField","fullWidth","multiline","rowsMax","name","label","helperText","autoFocus","value","onChange","event","disabled","size","style","opacity","pointerEvents","sitekey","captcha_sitekey","onExpired","submit","submitted","CircularProgress","Button","color","type","error","textAlign","minWidth","margin","Share","FacebookShareButton","button","url","FacebookIcon","round","TwitterShareButton","title","hashtags","TwitterIcon","WhatsappShareButton","WhatsappIcon","LinkedinShareButton","LinkedinIcon","RedditShareButton","marginRight","RedditIcon","outline","Actions","showShare","showReportBug","show","SpeedDial","ariaLabel","actions","icon","SpeedDialIcon","onOpen","direction","SpeedDialAction","tooltipTitle","tooltipPlacement","onClick","position","top","left","constants","formatTime","millisecs","duration","moment","Math","floor","asHours","utc","asMilliseconds","format","take","array","n","length","slice","get1ToN","result","i","push","getLast","getUpToSecondLast","getMeasurements","BASE_WIDTH","BASE_HEIGHT","multiplier","ceil","solve","numDisks","initCol1","initCol2","initCol3","col1","col2","col3","steps","moveDisk","fromCol","toCol","pop","moveDisks","maxSize","a","includes","JSON","stringify","Disk","active","xy","startMove","endDrag","move","endMove","windowHeight","divWidth","isTiming","startTimer","width","height","useState","dragging","setDragging","zIndex","setZIndex","useSpring","x","y","onRest","setPosition","useEffect","myRef","useRef","bind","useGesture","onDragStart","preventDefault","onDrag","onDragEnd","colNum","domTarget","eventOptions","passive","div","borderRadius","background","cursor","display","justifyContent","alignSelf","GameOver","fetching","highScores","showError","getCongratsMessage","time","renderTimeSubmitForm","timeStamp","fetch","high_score_api_endpoint","headers","high_score_api_key","body","then","response","json","_id","console","log","catch","Array","isArray","filter","highScore","sort","_id1","time1","timeStamp1","_id2","time2","timeStamp2","isBefore","flexDirection","DISK_COLORS","Leaderboard","takeFive","truncated","forEach","filtered","numDisks1","numDisks2","TableContainer","table","Table","stickyHeader","TableHead","TableRow","TableCell","align","TableBody","map","key","highlighted","component","scope","maxHeight","Likes","numLikes","like_api_endpoint","like_api_key","counter","IconButton","fontSize","right","alignItems","Timer","handler","start","prevProps","running","setInterval","now","diff","clearInterval","recordTime","warning","GROUND_HEIGHT","Controller","reverse","movingDisk","solving","step","showLeaderboard","hasUsedSolve","showGameOver","hasSubmitted","showSubmissionSuccess","isGameOver","getIsActive","getPosition","halfDivWidth","diskWidth","getY","col","newFromCol","newToCol","newCol1","newCol2","newCol3","parse","stop","restart","controlButtons","leaderboardButton","timer","Snackbar","success","message","maxNumDisks","Initializer","parseInt","setNumDisks","CONSOLE_HEIGHT","App","window","innerWidth","innerHeight","initializing","test","navigator","userAgent","addEventListener","scale","colWidth","colHeight","bufferHeight","columns","borderRight","userSelect","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df6dea6e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  content: {\r\n    marginTop: -20,\r\n    marginBottom: 20\r\n  }\r\n};\r\n\r\nclass Info extends React.Component {\r\n  state = { open: false, showInfo: false };\r\n\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    return (\r\n      <Dialog open={true} onClose={onClose}>\r\n        <DialogTitle>About the game</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <ul>\r\n            <li>\r\n              The objective is to move the stack of disks from the left column\r\n              to either of the other two columns.\r\n            </li>\r\n            <li>\r\n              Drag and drop a disk to move it. You can only move one disk at a\r\n              time and it must be the disk on top.\r\n            </li>\r\n            <li>Larger disks cannot be placed on top of smaller disks.</li>\r\n          </ul>\r\n          <p>\r\n            Read more about the game{\" \"}\r\n            <a\r\n              href='https://en.wikipedia.org/wiki/Tower_of_Hanoi'\r\n              target='_blank'\r\n              rel='noopener noreferrer'\r\n            >\r\n              here\r\n            </a>\r\n            .\r\n          </p>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Info);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Formik } from \"formik\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport privateInfo from \"../../privateInfo\";\r\n\r\nconst styles = {\r\n  content: {\r\n    marginBottom: 20,\r\n    textAlign: \"center\"\r\n  },\r\n  description: {\r\n    minWidth: \"25ch\",\r\n    marginBottom: 10\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  },\r\n  submitted: {\r\n    marginBottom: 10\r\n  },\r\n  error: {\r\n    margin: 0,\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass ReportBug extends React.Component {\r\n  state = {\r\n    verified: false,\r\n    submitting: false,\r\n    status: \"\"\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const form = this.form;\r\n    const data = new FormData(form);\r\n    const description = data.get(\"description\");\r\n\r\n    if (description) {\r\n      this.setState({ submitting: true }, () => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(form.method, form.action);\r\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState !== XMLHttpRequest.DONE) return;\r\n          if (xhr.status === 200) {\r\n            this.setState({ submitting: false, status: \"SUCCESS\" });\r\n          } else {\r\n            this.setState({ submitting: false, status: \"ERROR\" });\r\n          }\r\n        };\r\n        xhr.send(data);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes, windowWidth, onClose } = this.props;\r\n    const { verified, submitting, status } = this.state;\r\n    return (\r\n      <Dialog className={classes.root} open={true} onClose={onClose}>\r\n        <DialogTitle>Report a bug</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <Formik\r\n            onSubmit={this.handleSubmit}\r\n            initialValues={{ description: \"\" }}\r\n          >\r\n            {({ handleSubmit, handleChange, values }) => (\r\n              <form\r\n                ref={element => {\r\n                  this.form = element;\r\n                }}\r\n                noValidate\r\n                autoComplete='off'\r\n                onSubmit={handleSubmit}\r\n                action={privateInfo.form_endpoint}\r\n                method='POST'\r\n              >\r\n                <TextField\r\n                  className={classes.description}\r\n                  fullWidth\r\n                  multiline\r\n                  rowsMax={6}\r\n                  name='description'\r\n                  label='Description'\r\n                  helperText='Describe the bug to report'\r\n                  autoFocus={true}\r\n                  value={values.description}\r\n                  onChange={event => {\r\n                    this.setState({ status: \"\" });\r\n                    handleChange(event);\r\n                  }}\r\n                  disabled={status === \"SUCCESS\"}\r\n                />\r\n\r\n                <ReCAPTCHA\r\n                  size={windowWidth < 416 ? \"compact\" : \"normal\"}\r\n                  style={{\r\n                    ...(status === \"SUCCESS\"\r\n                      ? { opacity: 0.65, pointerEvents: \"none\" }\r\n                      : null)\r\n                  }}\r\n                  sitekey={privateInfo.captcha_sitekey}\r\n                  onChange={() => this.setState({ verified: true })}\r\n                  onExpired={() => this.setState({ verified: false })}\r\n                />\r\n\r\n                <div className={classes.submit}>\r\n                  {status === \"SUCCESS\" ? (\r\n                    <p className={classes.submitted}>Submitted!</p>\r\n                  ) : submitting ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    <Button\r\n                      color='primary'\r\n                      type='submit'\r\n                      disabled={!values.description || !verified}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  )}\r\n                  {status === \"ERROR\" && (\r\n                    <p className={classes.error}>Ooops! There was an error.</p>\r\n                  )}\r\n                </div>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ReportBug);\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  FacebookIcon,\r\n  FacebookShareButton,\r\n  TwitterIcon,\r\n  TwitterShareButton,\r\n  WhatsappIcon,\r\n  WhatsappShareButton,\r\n  LinkedinIcon,\r\n  LinkedinShareButton,\r\n  RedditIcon,\r\n  RedditShareButton\r\n} from \"react-share\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = {\r\n  content: {\r\n    marginBottom: 20,\r\n    \"& > *\": {\r\n      marginRight: 5\r\n    }\r\n  },\r\n  button: {\r\n    outline: \"none\"\r\n  }\r\n};\r\n\r\nclass Share extends React.Component {\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    return (\r\n      <Dialog open={true} onClose={onClose}>\r\n        <DialogTitle>Share</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          <FacebookShareButton\r\n            className={classes.button}\r\n            url='https://arosisi.github.io/tower-of-hanoi'\r\n          >\r\n            <FacebookIcon size={32} round />\r\n          </FacebookShareButton>\r\n\r\n          <TwitterShareButton\r\n            className={classes.button}\r\n            url='https://arosisi.github.io/tower-of-hanoi'\r\n            title='Tower of Hanoi'\r\n            hashtags={[\"game\", \"puzzle\", \"brainteaser\", \"towerofhanoi\"]}\r\n          >\r\n            <TwitterIcon size={32} round />\r\n          </TwitterShareButton>\r\n\r\n          <WhatsappShareButton\r\n            className={classes.button}\r\n            url='https://arosisi.github.io/tower-of-hanoi'\r\n            title='Tower of Hanoi'\r\n          >\r\n            <WhatsappIcon size={32} round />\r\n          </WhatsappShareButton>\r\n\r\n          <LinkedinShareButton\r\n            className={classes.button}\r\n            url='https://arosisi.github.io/tower-of-hanoi'\r\n          >\r\n            <LinkedinIcon size={32} round />\r\n          </LinkedinShareButton>\r\n\r\n          <RedditShareButton\r\n            className={classes.button}\r\n            style={{ marginRight: 0 }}\r\n            url='https://arosisi.github.io/tower-of-hanoi'\r\n            title='Tower of Hanoi'\r\n          >\r\n            <RedditIcon size={32} round />\r\n          </RedditShareButton>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Share);\r\n","import React from \"react\";\r\nimport BugReportIcon from \"@material-ui/icons/BugReportOutlined\";\r\nimport InfoIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\r\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Info from \"./Info\";\r\nimport ReportBug from \"./ReportBug\";\r\nimport Share from \"./Share\";\r\n\r\nconst styles = {\r\n  actions: {\r\n    position: \"absolute\",\r\n    top: 15,\r\n    left: 15\r\n  }\r\n};\r\n\r\nclass Actions extends React.Component {\r\n  state = {\r\n    open: false,\r\n    showShare: false,\r\n    showInfo: false,\r\n    showReportBug: false\r\n  };\r\n\r\n  render() {\r\n    const { classes, windowWidth, show } = this.props;\r\n    const { open, showShare, showInfo, showReportBug } = this.state;\r\n    return (\r\n      <div>\r\n        <SpeedDial\r\n          ariaLabel='Actions'\r\n          className={classes.actions}\r\n          icon={<SpeedDialIcon />}\r\n          onClose={() => this.setState({ open: false })}\r\n          onOpen={() => this.setState({ open: true })}\r\n          open={open}\r\n          direction='down'\r\n        >\r\n          <SpeedDialAction\r\n            icon={<ShareIcon />}\r\n            tooltipTitle={\"Share\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => this.setState({ open: false, showShare: true })}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<InfoIcon />}\r\n            tooltipTitle={\"Info\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => {\r\n              show();\r\n              this.setState({ open: false, showInfo: true });\r\n            }}\r\n          />\r\n          <SpeedDialAction\r\n            icon={<BugReportIcon />}\r\n            tooltipTitle={\"Report Bug\"}\r\n            tooltipPlacement='right'\r\n            onClick={() => {\r\n              show();\r\n              this.setState({ open: false, showReportBug: true });\r\n            }}\r\n          />\r\n        </SpeedDial>\r\n\r\n        {showShare && (\r\n          <Share onClose={() => this.setState({ showShare: false })} />\r\n        )}\r\n        {showInfo && (\r\n          <Info onClose={() => this.setState({ showInfo: false })} />\r\n        )}\r\n        {showReportBug && (\r\n          <ReportBug\r\n            windowWidth={windowWidth}\r\n            onClose={() => this.setState({ showReportBug: false })}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Actions);\r\n","export const constants = {\r\n  BASE_WIDTH: 50,\r\n  BASE_HEIGHT: 20,\r\n  CONSOLE_HEIGHT: 300,\r\n  GROUND_HEIGHT: 150,\r\n  DISK_COLORS: [\r\n    \"#448098\",\r\n    \"#e2c1b9\",\r\n    \"#da344d\",\r\n    \"#d7bc3e\",\r\n    \"#2faa77\",\r\n    \"#e37e8c\",\r\n    \"#57a9d4\",\r\n    \"#a08986\"\r\n  ]\r\n};\r\n","import moment from \"moment\";\r\n\r\nimport { constants } from \"./constants\";\r\n\r\nexport const formatTime = millisecs => {\r\n  const duration = moment.duration(millisecs);\r\n  return (\r\n    Math.floor(duration.asHours()) +\r\n    moment.utc(duration.asMilliseconds()).format(\":mm:ss:SSS\")\r\n  );\r\n};\r\n\r\nexport const take = (array, n) => {\r\n  if (array.length <= n) {\r\n    return array;\r\n  }\r\n  return array.slice(0, n);\r\n};\r\n\r\nexport const get1ToN = n => {\r\n  const result = [];\r\n  for (let i = 1; i <= n; i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getLast = array => array[array.length - 1];\r\n\r\nexport const getUpToSecondLast = array => array.slice(0, array.length - 1);\r\n\r\nexport const getMeasurements = size => {\r\n  const { BASE_WIDTH, BASE_HEIGHT } = constants;\r\n  const multiplier = size * 0.3 + 0.7;\r\n  return [Math.ceil(BASE_WIDTH * multiplier), BASE_HEIGHT];\r\n};\r\n\r\nexport const solve = (numDisks, initCol1, initCol2, initCol3) => {\r\n  let col1 = [...initCol1];\r\n  let col2 = [...initCol2];\r\n  let col3 = [...initCol3];\r\n\r\n  let steps = \"\";\r\n\r\n  const moveDisk = (fromCol, toCol, size) => {\r\n    if (fromCol === col1) {\r\n      col1.pop();\r\n    } else if (fromCol === col2) {\r\n      col2.pop();\r\n    } else {\r\n      col3.pop();\r\n    }\r\n\r\n    if (toCol === col1) {\r\n      col1.push(size);\r\n    } else if (toCol === col2) {\r\n      col2.push(size);\r\n    } else {\r\n      col3.push(size);\r\n    }\r\n  };\r\n\r\n  // algorithm from\r\n  // https://stackoverflow.com/questions/49220476/tower-of-hanoi-solving-halfway-algorithm-in-python\r\n  const moveDisks = async (maxSize, toCol) => {\r\n    let fromCol;\r\n    let size = maxSize;\r\n    while (size >= 1) {\r\n      if (col1 !== toCol && col1.includes(size)) {\r\n        fromCol = col1;\r\n        break;\r\n      }\r\n      if (col2 !== toCol && col2.includes(size)) {\r\n        fromCol = col2;\r\n        break;\r\n      }\r\n      if (col3 !== toCol && col3.includes(size)) {\r\n        fromCol = col3;\r\n        break;\r\n      }\r\n      size--;\r\n    }\r\n\r\n    // all disks are already in the to-column\r\n    if (size === 0) {\r\n      return;\r\n    }\r\n\r\n    const otherCol =\r\n      col1 !== fromCol && col1 !== toCol\r\n        ? col1\r\n        : col2 !== fromCol && col2 !== toCol\r\n        ? col2\r\n        : col3;\r\n\r\n    moveDisks(size - 1, otherCol);\r\n\r\n    moveDisk(fromCol, toCol, size);\r\n    steps += `${JSON.stringify({ col1, col2, col3 })},`;\r\n\r\n    moveDisks(size - 1, toCol);\r\n  };\r\n\r\n  moveDisks(numDisks, col2);\r\n\r\n  return `[${steps.slice(0, -1)}]`;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSpring, animated } from \"react-spring\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nimport { getMeasurements } from \"../helpers\";\r\n\r\nfunction Disk(props) {\r\n  const {\r\n    active,\r\n    xy,\r\n    startMove,\r\n    endDrag,\r\n    move,\r\n    endMove,\r\n    size,\r\n    color,\r\n    windowWidth,\r\n    windowHeight,\r\n    divWidth,\r\n    isTiming,\r\n    startTimer\r\n  } = props;\r\n  const [width, height] = getMeasurements(size);\r\n\r\n  // is the disk being dragged\r\n  const [dragging, setDragging] = useState(false);\r\n\r\n  // z-index to put moving disk in front\r\n  const [zIndex, setZIndex] = useState(1);\r\n\r\n  // spring to smoothen drag\r\n  const [{ x, y }, setPosition] = useSpring(\r\n    () => ({\r\n      x: xy[0],\r\n      y: xy[1],\r\n      onRest() {\r\n        if (!dragging) endMove();\r\n      }\r\n    }),\r\n    [dragging, endMove]\r\n  );\r\n\r\n  // move disks via props.xy\r\n  useEffect(() => {\r\n    setPosition({ x: props.xy[0], y: props.xy[1] });\r\n  }, [setPosition, props.xy]);\r\n\r\n  const myRef = React.useRef(null);\r\n\r\n  const bind = useGesture(\r\n    {\r\n      onDragStart: ({ event }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          startMove();\r\n          setDragging(true);\r\n          if (!isTiming) {\r\n            startTimer();\r\n          }\r\n        }\r\n      },\r\n      onDrag: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          const effectiveX =\r\n            x > windowWidth - width / 2 ? windowWidth - width / 2 : x;\r\n          const effectiveY =\r\n            y > windowHeight - height ? windowHeight - height : y;\r\n          setPosition({\r\n            x: effectiveX - width / 2,\r\n            y: effectiveY - height / 2\r\n          });\r\n          if (zIndex !== 99) {\r\n            setZIndex(99);\r\n          }\r\n        }\r\n      },\r\n      onDragEnd: ({ event, xy: [x, y] }) => {\r\n        event.preventDefault();\r\n        if (active) {\r\n          const colNum = x <= divWidth ? 1 : x <= 2 * divWidth ? 2 : 3;\r\n          endDrag();\r\n          setDragging(false);\r\n          setZIndex(1);\r\n          move(colNum, size);\r\n        }\r\n      }\r\n    },\r\n    {\r\n      domTarget: myRef,\r\n      eventOptions: { passive: false }\r\n    }\r\n  );\r\n\r\n  React.useEffect(bind, [bind]);\r\n\r\n  return (\r\n    <animated.div\r\n      ref={myRef}\r\n      {...bind()}\r\n      style={{\r\n        position: \"absolute\",\r\n        x,\r\n        y,\r\n        zIndex,\r\n        width,\r\n        height,\r\n        borderRadius: \"20px\",\r\n        background: color,\r\n        cursor: active ? \"grab\" : \"default\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n      }}\r\n    >\r\n      <span style={{ alignSelf: \"center\" }}>{size}</span>\r\n    </animated.div>\r\n  );\r\n}\r\n\r\nexport default Disk;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  },\r\n  error: {\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass GameOver extends React.Component {\r\n  state = {\r\n    fetching: true,\r\n    highScores: [],\r\n    submitting: false,\r\n    showError: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { numDisks } = this.props;\r\n    fetch(privateInfo.high_score_api_endpoint, {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-apikey\": privateInfo.high_score_api_key,\r\n        \"cache-control\": \"no-cache\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (Array.isArray(response)) {\r\n          const highScores = response.filter(\r\n            highScore => highScore.numDisks === numDisks\r\n          );\r\n          this.setState({\r\n            fetching: false,\r\n            highScores: highScores.sort(\r\n              (\r\n                { _id: _id1, time: time1, timeStamp: timeStamp1 },\r\n                { _id: _id2, time: time2, timeStamp: timeStamp2 }\r\n              ) =>\r\n                time1 !== time2\r\n                  ? time1 - time2\r\n                  : timeStamp1 !== timeStamp2\r\n                  ? moment(timeStamp1).isBefore(moment(timeStamp2))\r\n                  : _id1 < _id2\r\n            )\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false });\r\n          console.log(\"Failed to fetch high scores.\");\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  getCongratsMessage = () => {\r\n    const { numDisks, time } = this.props;\r\n    const { highScores } = this.state;\r\n    const position =\r\n      time < highScores[0].time\r\n        ? \"\"\r\n        : !highScores[1] || time < highScores[1].time\r\n        ? \"2nd\"\r\n        : !highScores[2] || time < highScores[2].time\r\n        ? \"3rd\"\r\n        : !highScores[3] || time < highScores[3].time\r\n        ? \"4th\"\r\n        : \"5th\";\r\n    return (\r\n      <div>\r\n        You have the <strong>{position}</strong>\r\n        {position ? \" \" : \"\"}best time for {numDisks} disk(s).\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderTimeSubmitForm = () => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Formik onSubmit={this.handleSubmit} initialValues={{ name: \"\" }}>\r\n        {({ handleSubmit, handleChange, values }) => (\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              name='name'\r\n              label='Name'\r\n              helperText='Enter your name to display on the leaderboard'\r\n              autoFocus={true}\r\n              value={values.name}\r\n              onChange={event => {\r\n                this.setState({ showError: false });\r\n                handleChange(event);\r\n              }}\r\n            />\r\n            <Button\r\n              className={classes.submit}\r\n              color='primary'\r\n              type='submit'\r\n              disabled={!values.name}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    );\r\n  };\r\n\r\n  handleSubmit = ({ name }) => {\r\n    const { numDisks, time, timeStamp, onSubmit } = this.props;\r\n    this.setState({ submitting: true }, () => {\r\n      fetch(privateInfo.high_score_api_endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \"x-apikey\": privateInfo.high_score_api_key,\r\n          \"cache-control\": \"no-cache\"\r\n        },\r\n        body: JSON.stringify({\r\n          numDisks: numDisks,\r\n          name,\r\n          time,\r\n          timeStamp\r\n        })\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          if (response._id) {\r\n            this.setState({\r\n              submitting: false\r\n            });\r\n            onSubmit();\r\n          } else {\r\n            this.setState({ submitting: false, showError: true });\r\n            console.log(\"Failed to update high scores.\");\r\n          }\r\n        })\r\n        .catch(error => console.log(\"Unable to connect to API.\", error));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, numDisks, time, onClose } = this.props;\r\n    const { fetching, highScores, submitting, showError } = this.state;\r\n    return (\r\n      <div>\r\n        <Dialog className={classes.root} open={true} onClose={onClose}>\r\n          <DialogTitle>Your time is {formatTime(time)}!</DialogTitle>\r\n          <DialogContent className={classes.content}>\r\n            {fetching ? (\r\n              <CircularProgress />\r\n            ) : highScores.length ? (\r\n              highScores.length < 5 || time < highScores[4].time ? (\r\n                <div>\r\n                  {this.getCongratsMessage()}\r\n                  <br />\r\n                  {submitting ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    this.renderTimeSubmitForm()\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div>\r\n                    You haven't beaten the 5th best time of{\" \"}\r\n                    <strong>{highScores[4].name}</strong> of{\" \"}\r\n                    <strong>{formatTime(highScores[4].time)}</strong> for{\" \"}\r\n                    {numDisks} disk(s).\r\n                  </div>\r\n                  <p>Try again!</p>\r\n                </div>\r\n              )\r\n            ) : (\r\n              <div>\r\n                <div>There is no best time for now for {numDisks} disk(s).</div>\r\n                <br />\r\n                {submitting ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  this.renderTimeSubmitForm()\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {showError && (\r\n              <p className={classes.error}>\r\n                Something went wrong. Try again later.\r\n              </p>\r\n            )}\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(GameOver);\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport moment from \"moment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { get1ToN, take, formatTime } from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst { DISK_COLORS } = constants;\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  content: {\r\n    marginBottom: 20\r\n  },\r\n  table: {\r\n    width: \"fit-content\",\r\n    maxHeight: 400\r\n  },\r\n  highlighted: {\r\n    background: \"rgba(0, 0, 0, 0.04)\"\r\n  },\r\n  error: {\r\n    color: \"#f44336\"\r\n  }\r\n};\r\n\r\nclass Leaderboard extends React.Component {\r\n  state = { fetching: true, highScores: [], showError: false };\r\n\r\n  componentDidMount() {\r\n    fetch(privateInfo.high_score_api_endpoint, {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-apikey\": privateInfo.high_score_api_key,\r\n        \"cache-control\": \"no-cache\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (Array.isArray(response)) {\r\n          this.setState({\r\n            fetching: false,\r\n            highScores: this.takeFive(\r\n              response.sort(\r\n                (\r\n                  {\r\n                    _id: _id1,\r\n                    numDisks: numDisks1,\r\n                    time: time1,\r\n                    timeStamp: timeStamp1\r\n                  },\r\n                  {\r\n                    _id: _id2,\r\n                    numDisks: numDisks2,\r\n                    time: time2,\r\n                    timeStamp: timeStamp2\r\n                  }\r\n                ) =>\r\n                  numDisks1 !== numDisks2\r\n                    ? numDisks1 - numDisks2\r\n                    : time1 !== time2\r\n                    ? time1 - time2\r\n                    : timeStamp1 !== timeStamp2\r\n                    ? moment(timeStamp1).isBefore(moment(timeStamp2))\r\n                    : _id1 < _id2\r\n              )\r\n            )\r\n          });\r\n        } else {\r\n          this.setState({ fetching: false, showError: true });\r\n          console.log(\"Failed to fetch high scores.\");\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  takeFive = highScores => {\r\n    const truncated = [];\r\n    get1ToN(DISK_COLORS.length).forEach(numDisks => {\r\n      const filtered = highScores.filter(\r\n        highScore => highScore.numDisks === numDisks\r\n      );\r\n      if (filtered.length) {\r\n        truncated.push(...take(filtered, 5));\r\n      }\r\n    });\r\n    return truncated;\r\n  };\r\n\r\n  render() {\r\n    const { classes, onClose } = this.props;\r\n    const { fetching, highScores, showError } = this.state;\r\n    return (\r\n      <Dialog className={classes.root} open={true} onClose={onClose}>\r\n        <DialogTitle>Leaderboard</DialogTitle>\r\n        <DialogContent className={classes.content}>\r\n          {fetching ? (\r\n            <CircularProgress />\r\n          ) : highScores.length ? (\r\n            <TableContainer className={classes.table}>\r\n              <Table stickyHeader size='small'>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>No. Disks</TableCell>\r\n                    <TableCell align='right'>Name</TableCell>\r\n                    <TableCell align='right'>Time</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {highScores.map(highScore => {\r\n                    const { _id, numDisks, name, time } = highScore;\r\n                    return (\r\n                      <TableRow\r\n                        key={_id}\r\n                        className={\r\n                          numDisks % 2 === 1 ? classes.highlighted : \"\"\r\n                        }\r\n                      >\r\n                        <TableCell component='th' scope='row'>\r\n                          {numDisks}\r\n                        </TableCell>\r\n                        <TableCell align='right'>{name}</TableCell>\r\n                        <TableCell align='right'>{formatTime(time)}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          ) : (\r\n            !showError && \"There is no best time for now.\"\r\n          )}\r\n\r\n          {showError && (\r\n            <div className={classes.error}>\r\n              Something went wrong. Try again later.\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Leaderboard);\r\n","import React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LikedIcon from \"@material-ui/icons/Favorite\";\r\nimport UnlikedIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport moment from \"moment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport privateInfo from \"../privateInfo\";\r\n\r\nconst styles = {\r\n  root: {\r\n    position: \"absolute\",\r\n    top: 30,\r\n    right: 30,\r\n    zIndex: 1\r\n  },\r\n  counter: {\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nclass Likes extends React.Component {\r\n  state = { numLikes: null, timeStamp: null };\r\n\r\n  componentDidMount() {\r\n    fetch(privateInfo.like_api_endpoint, {\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-apikey\": privateInfo.like_api_key,\r\n        \"cache-control\": \"no-cache\"\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (Array.isArray(response)) {\r\n          this.setState({ numLikes: response.length });\r\n        } else {\r\n          console.log(\"Failed to fetch likes.\");\r\n        }\r\n      })\r\n      .catch(error => console.log(\"Unable to connect to API.\", error));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { timeStamp } = this.state;\r\n    if (timeStamp) {\r\n      fetch(privateInfo.like_api_endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          \"x-apikey\": privateInfo.like_api_key,\r\n          \"cache-control\": \"no-cache\"\r\n        },\r\n        body: JSON.stringify({ timeStamp })\r\n      })\r\n        .then(response => response.json())\r\n        .then(response => {\r\n          if (!response._id) {\r\n            console.log(\"Failed to update likes.\");\r\n          }\r\n        })\r\n        .catch(error => console.log(\"Unable to connect to API.\", error));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { numLikes, timeStamp } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        {numLikes !== null ? (\r\n          <div className={classes.counter}>\r\n            {numLikes + !!timeStamp}\r\n            <IconButton\r\n              size='small'\r\n              onClick={() =>\r\n                this.setState({\r\n                  timeStamp: !timeStamp ? moment() : null\r\n                })\r\n              }\r\n            >\r\n              {timeStamp ? (\r\n                <LikedIcon color='secondary' fontSize='small' />\r\n              ) : (\r\n                <UnlikedIcon color='secondary' fontSize='small' />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n        ) : (\r\n          <CircularProgress color='secondary' size={24} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Likes);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { formatTime } from \"../helpers\";\r\n\r\nconst styles = {\r\n  time: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\",\r\n    cursor: \"pointer\"\r\n  },\r\n  warning: {\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass Timer extends React.Component {\r\n  state = { handler: null, start: null, millisecs: 0, timeStamp: null };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (!prevProps.running && this.props.running) {\r\n      const handler = setInterval(() => {\r\n        const now = moment();\r\n        const start = this.state.start || now;\r\n        const millisecs = now.diff(start);\r\n        this.setState({ start, millisecs });\r\n      }, 10);\r\n      this.setState({ handler });\r\n    }\r\n\r\n    if (prevProps.running && !this.props.running) {\r\n      const { handler } = this.state;\r\n      clearInterval(handler);\r\n\r\n      const timeStamp = moment();\r\n\r\n      this.setState({ timeStamp });\r\n\r\n      if (!prevProps.disabled && !this.props.disabled) {\r\n        this.props.recordTime(this.state.millisecs, timeStamp);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    clearInterval(handler);\r\n  }\r\n\r\n  render() {\r\n    const { classes, disabled, recordTime } = this.props;\r\n    const { millisecs, timeStamp } = this.state;\r\n    return (\r\n      <div style={{ color: disabled ? \"#f44336\" : \"inherit\" }}>\r\n        <div\r\n          className={classes.time}\r\n          onClick={() => recordTime(millisecs, timeStamp)}\r\n        >\r\n          {formatTime(millisecs)}\r\n        </div>\r\n        {disabled && (\r\n          <div className={classes.warning}>Time is now invalid!</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Timer);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Confetti from \"react-confetti\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Actions from \"./actions/Actions\";\r\nimport Disk from \"./Disk\";\r\nimport GameOver from \"./GameOver\";\r\nimport Leaderboard from \"./Leaderboard\";\r\nimport Likes from \"./Likes\";\r\nimport Timer from \"./Timer\";\r\nimport {\r\n  get1ToN,\r\n  getLast,\r\n  getUpToSecondLast,\r\n  getMeasurements,\r\n  solve\r\n} from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\n\r\nconst { GROUND_HEIGHT, DISK_COLORS } = constants;\r\n\r\nconst styles = {\r\n  controlButtons: {\r\n    position: \"absolute\",\r\n    top: 30,\r\n    left: 0,\r\n    right: 0,\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  leaderboardButton: {\r\n    position: \"absolute\",\r\n    top: 70,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  timer: {\r\n    position: \"absolute\",\r\n    top: 110,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  success: {\r\n    width: \"fit-content\",\r\n    margin: \"auto\"\r\n  }\r\n};\r\n\r\nclass Controller extends React.Component {\r\n  state = {\r\n    col1: get1ToN(this.props.numDisks).reverse(),\r\n    col2: [],\r\n    col3: [],\r\n    dragging: false,\r\n    movingDisk: null,\r\n    solving: false,\r\n    handler: null,\r\n    step: 0,\r\n    showLeaderboard: false,\r\n    isTiming: false,\r\n    time: null,\r\n    timeStamp: null,\r\n    hasUsedSolve: false,\r\n    showGameOver: false,\r\n    hasSubmitted: false,\r\n    showSubmissionSuccess: false\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { handler } = this.state;\r\n    if (handler) {\r\n      clearInterval(handler);\r\n    }\r\n  }\r\n\r\n  isGameOver = () => {\r\n    const { numDisks } = this.props;\r\n    const { col2, col3, movingDisk } = this.state;\r\n    return (\r\n      !movingDisk && (col2.length === numDisks || col3.length === numDisks)\r\n    );\r\n  };\r\n\r\n  getIsActive = size => {\r\n    const { col1, col2, col3, dragging, movingDisk, solving } = this.state;\r\n    return (\r\n      (!dragging || !movingDisk || movingDisk === size) &&\r\n      !solving &&\r\n      !this.isGameOver() &&\r\n      (getLast(col1) === size ||\r\n        getLast(col2) === size ||\r\n        getLast(col3) === size)\r\n    );\r\n  };\r\n\r\n  getPosition = size => {\r\n    const { windowWidth } = this.props;\r\n    const { col1, col2, col3 } = this.state;\r\n    const halfDivWidth = windowWidth / 6;\r\n    const diskWidth = getMeasurements(size)[0];\r\n    if (col1.includes(size)) {\r\n      const x = halfDivWidth - diskWidth / 2;\r\n      const y = this.getY(col1, size);\r\n      return [x, y];\r\n    }\r\n\r\n    if (col2.includes(size)) {\r\n      const x = halfDivWidth * 3 - diskWidth / 2;\r\n      const y = this.getY(col2, size);\r\n      return [x, y];\r\n    }\r\n\r\n    const x = halfDivWidth * 5 - diskWidth / 2;\r\n    const y = this.getY(col3, size);\r\n    return [x, y];\r\n  };\r\n\r\n  getY = (col, size) => {\r\n    const { windowHeight } = this.props;\r\n    const divHeight = windowHeight - GROUND_HEIGHT;\r\n    const diskHeight = getMeasurements(size)[1];\r\n    let y = divHeight - diskHeight;\r\n    let i = 0;\r\n    while (col[i] !== size) {\r\n      y -= getMeasurements(col[i])[1];\r\n      i++;\r\n    }\r\n    return y;\r\n  };\r\n\r\n  move = (colNum, size) => {\r\n    const { col1, col2, col3 } = this.state;\r\n    // prettier-ignore\r\n    const fromCol = col1.includes(size) ? col1 : col2.includes(size) ? col2 : col3;\r\n    const toCol = colNum === 1 ? col1 : colNum === 2 ? col2 : col3;\r\n\r\n    if (fromCol === toCol || size > getLast(toCol)) {\r\n      return;\r\n    }\r\n\r\n    const newFromCol = getUpToSecondLast(fromCol);\r\n    const newToCol = [...toCol, size];\r\n\r\n    // prettier-ignore\r\n    const newCol1 = col1 === fromCol ? newFromCol : col1 === toCol ? newToCol : col1\r\n    // prettier-ignore\r\n    const newCol2 = col2 === fromCol ? newFromCol : col2 === toCol ? newToCol : col2\r\n    // prettier-ignore\r\n    const newCol3 = col3 === fromCol ? newFromCol : col3 === toCol ? newToCol : col3\r\n\r\n    this.setState({\r\n      col1: newCol1,\r\n      col2: newCol2,\r\n      col3: newCol3\r\n    });\r\n  };\r\n\r\n  solve = () => {\r\n    this.setState({ isTiming: false, hasUsedSolve: true });\r\n\r\n    const { numDisks } = this.props;\r\n    const { col1, col2, col3 } = this.state;\r\n    const steps = JSON.parse(solve(numDisks, [...col1], [...col2], [...col3]));\r\n    this.setState({ solving: true, steps, step: 0 }, () => {\r\n      const handler = setInterval(() => {\r\n        const { steps, step } = this.state;\r\n        if (step < steps.length) {\r\n          this.setState({ ...steps[step], step: step + 1 });\r\n        } else {\r\n          clearInterval(handler);\r\n        }\r\n      }, 1000);\r\n      this.setState({ handler });\r\n    });\r\n  };\r\n\r\n  stop = () => {\r\n    const { handler } = this.state;\r\n    this.setState({ solving: false }, () => clearInterval(handler));\r\n  };\r\n\r\n  show = state => {\r\n    const { solving, handler } = this.state;\r\n    if (solving && !this.isGameOver()) {\r\n      this.setState({ solving: false, ...state }, () => clearInterval(handler));\r\n    } else {\r\n      this.setState({ ...state });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      numDisks,\r\n      windowWidth,\r\n      windowHeight,\r\n      restart\r\n    } = this.props;\r\n    const {\r\n      solving,\r\n      showLeaderboard,\r\n      isTiming,\r\n      time,\r\n      timeStamp,\r\n      hasUsedSolve,\r\n      showGameOver,\r\n      hasSubmitted,\r\n      showSubmissionSuccess\r\n    } = this.state;\r\n    const divWidth = windowWidth / 3;\r\n    const isGameOver = this.isGameOver();\r\n    return (\r\n      <div>\r\n        <Actions windowWidth={windowWidth} show={this.show} />\r\n\r\n        <Likes />\r\n\r\n        <div className={classes.controlButtons}>\r\n          {!solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.solve}>\r\n              Solve\r\n            </Button>\r\n          )}\r\n          {solving && (\r\n            <Button color='primary' disabled={isGameOver} onClick={this.stop}>\r\n              Stop\r\n            </Button>\r\n          )}\r\n          <Button color='secondary' onClick={restart}>\r\n            Restart\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.leaderboardButton}>\r\n          <Button onClick={() => this.show({ showLeaderboard: true })}>\r\n            Leaderboard\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.timer}>\r\n          <Timer\r\n            running={isTiming && !isGameOver}\r\n            disabled={hasUsedSolve}\r\n            recordTime={(time, timeStamp) =>\r\n              this.setState({ time, timeStamp, showGameOver: true })\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {showLeaderboard && (\r\n          <Leaderboard\r\n            onClose={() => this.setState({ showLeaderboard: false })}\r\n          />\r\n        )}\r\n\r\n        {showGameOver && isGameOver && !hasUsedSolve && !hasSubmitted && (\r\n          <GameOver\r\n            numDisks={numDisks}\r\n            time={time}\r\n            timeStamp={timeStamp}\r\n            onClose={() => this.setState({ showGameOver: false })}\r\n            onSubmit={() =>\r\n              this.setState({ hasSubmitted: true, showSubmissionSuccess: true })\r\n            }\r\n          />\r\n        )}\r\n\r\n        {showSubmissionSuccess && (\r\n          <Snackbar\r\n            className={classes.success}\r\n            open={true}\r\n            message='High score submitted!'\r\n            onClose={() => this.setState({ showSubmissionSuccess: false })}\r\n          />\r\n        )}\r\n\r\n        {isGameOver && <Confetti width={windowWidth} height={windowHeight} />}\r\n\r\n        {get1ToN(numDisks).map(size => (\r\n          <Disk\r\n            key={size}\r\n            active={this.getIsActive(size)}\r\n            xy={this.getPosition(size)}\r\n            startMove={() =>\r\n              this.setState({ dragging: true, movingDisk: size })\r\n            }\r\n            endDrag={() => this.setState({ dragging: false })}\r\n            move={this.move}\r\n            endMove={() => this.setState({ movingDisk: null })}\r\n            size={size}\r\n            color={DISK_COLORS[size - 1]}\r\n            windowWidth={windowWidth}\r\n            windowHeight={windowHeight}\r\n            divWidth={divWidth}\r\n            isTiming={isTiming}\r\n            startTimer={() => {\r\n              const { hasUsedSolve } = this.state;\r\n              if (!hasUsedSolve) {\r\n                this.setState({ isTiming: true });\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Controller);\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { get1ToN } from \"../helpers\";\r\nimport { constants } from \"../constants\";\r\n\r\nconst { DISK_COLORS } = constants;\r\nconst maxNumDisks = DISK_COLORS.length;\r\n\r\nconst styles = {\r\n  root: {\r\n    marginTop: 30\r\n  },\r\n  submit: {\r\n    marginTop: 10\r\n  }\r\n};\r\n\r\nclass Initializer extends React.Component {\r\n  state = { error: false };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const numDisks = parseInt(data.get(\"numDisks\"));\r\n    if (get1ToN(maxNumDisks).includes(numDisks)) {\r\n      this.props.setNumDisks(numDisks);\r\n    } else {\r\n      this.setState({ error: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { error } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <form onSubmit={this.handleSubmit} noValidate autoComplete='off'>\r\n          <TextField\r\n            name='numDisks'\r\n            label='Number of Disks'\r\n            helperText={`Enter a number up to ${maxNumDisks}`}\r\n            autoFocus={true}\r\n            error={error}\r\n          />\r\n          <br />\r\n          <Button className={classes.submit} color='primary' type='submit'>\r\n            Go\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Initializer);\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Controller from \"./components/Controller\";\r\nimport Initializer from \"./components/Initializer\";\r\nimport { constants } from \"./constants\";\r\n\r\nconst { BASE_HEIGHT, CONSOLE_HEIGHT, GROUND_HEIGHT } = constants;\r\n\r\nconst styles = {\r\n  console: {\r\n    position: \"absolute\",\r\n    left: 0,\r\n    right: 0,\r\n    textAlign: \"center\"\r\n  },\r\n  columns: {\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    userSelect: \"none\"\r\n  }\r\n};\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    windowWidth: window.innerWidth,\r\n    windowHeight: window.innerHeight,\r\n    initializing: true,\r\n    numDisks: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (/iPad|iPhone|iPod/.test(navigator.userAgent)) {\r\n      window.addEventListener(\r\n        \"touchmove\",\r\n        event => {\r\n          if (event.scale > 1) {\r\n            event.preventDefault();\r\n          }\r\n        },\r\n        { passive: false }\r\n      );\r\n    }\r\n\r\n    window.addEventListener(\"resize\", ({ target }) =>\r\n      this.setState({\r\n        windowWidth: target.innerWidth,\r\n        windowHeight: target.innerHeight\r\n      })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { windowWidth, windowHeight, initializing, numDisks } = this.state;\r\n    const colWidth = windowWidth / 3;\r\n    const colHeight = numDisks ? numDisks * BASE_HEIGHT : 0;\r\n    const bufferHeight =\r\n      windowHeight - CONSOLE_HEIGHT - GROUND_HEIGHT - colHeight;\r\n    return (\r\n      <div>\r\n        <div style={{ width: windowWidth, height: CONSOLE_HEIGHT }}>\r\n          <div className={classes.console}>\r\n            {initializing ? (\r\n              <Initializer\r\n                setNumDisks={numDisks =>\r\n                  this.setState({ initializing: false, numDisks })\r\n                }\r\n              />\r\n            ) : (\r\n              <Controller\r\n                numDisks={numDisks}\r\n                windowWidth={windowWidth}\r\n                windowHeight={windowHeight}\r\n                restart={() =>\r\n                  this.setState({ initializing: true, numDisks: null })\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ width: windowWidth, height: bufferHeight }} />\r\n\r\n        <div className={classes.columns}>\r\n          <div\r\n            style={{\r\n              width: colWidth,\r\n              height: colHeight,\r\n              borderRight: \"5px solid #cde4ef\"\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: colWidth,\r\n              height: colHeight,\r\n              borderRight: \"5px solid #cde4ef\"\r\n            }}\r\n          />\r\n          <div\r\n            style={{\r\n              width: colWidth,\r\n              height: colHeight\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            width: windowWidth,\r\n            height: GROUND_HEIGHT,\r\n            background: \"#cde4ef\"\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}